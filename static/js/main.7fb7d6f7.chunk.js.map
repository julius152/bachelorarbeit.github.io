{"version":3,"sources":["setupimg.svg","cross.svg","svg/fhg_logo.svg","svg/fh_aachen.svg","Nbar.js","Setup.js","ManufacturingParameters.js","Build.js","Start.js","Route.js","App.js","serviceWorker.js","index.js","untitled.svg"],"names":["module","exports","Nbar","className","Navbar","bg","variant","size","fixed","Brand","href","Nav","to","Link","Button","style","backgroundColor","borderColor","disabled","Form","Check","type","label","id","checked","this","props","expertmode","onClick","e","expertmodeClick","marginRight","dangerbutton","Dropdown","drop","Toggle","Menu","Item","setColumnsize","Modal","show","passwordshow","Header","Title","Body","Group","Label","Control","onChange","passwordbordercolor","value","password","passwordOnClick","passwordnotcorrect","Text","color","Footer","passwordCheck","passwordClose","React","Component","Setup","paddingTop","dropdowntitle","dropdownClick","Row","Col","xs","columnsizeform","as","column","sm","columnsizetext","columnsizeinput","toolwidthV","toolwidth","onBlur","onClickdelete","toollengthV","name","toollength","toolheightV","toolheight","chamberheightV","nozzledistance","substrateheight","substratewidthV","substratewidth","substratelengthV","substratelength","substrateheightV","nozzledistanceV","columnsizeimage","Image","src","setupimg","marginTop","submitbutton","float","width","marginLeft","height","sendSetupValues","class","alignSelf","setupvalues1check","check","dangershow","Tabs","Tab","eventKey","title","setup2activate","substrateposxV","placeholder","substrateposx","onBlurPos","onClickdeletePos","substrateposyV","substrateposy","ButtonGroup","vertical","DropdownButton","stepsize","setStepSize","printheadpos","setPosmanualsubstrate","movenozzleXplus","movenozzleXminus","movenozzleYplus","movenozzleYminus","movenozzleZplus","movenozzleZminus","rpposxV","rpposx","rpposyV","rpposy","setPosmanualrppos","previewbutton","sendSetupValues2","setupvalues2check","showPreview","block","fontSize","showgraphicalrepresentation","text","x","y","points","pointerLength","pointerWidth","fill","stroke","strokeWidth","showpreview","parseInt","Mparm","fileInput","createRef","chosenfilename","state","uploadcolor","powerV","power","onBlurMparm","jetdiameterV","jetdiameter","gasflowV","gasflow","wirefeeddropdowntext","dropdownWirefeed","wirefeedV","wirefeedplaceholder","wirefeed","printheadspeedV","printheadspeed","mparmsend","sendMparmValues","mparmvaluescheck","ref","filename","fileSelectionNameOnChange","current","files","htmlFor","uploadfilenameApp","fileUpload","uploadbutton","InputGroup","Prepend","FormControl","createGcode","deleteGcode","editGcode","FormGroup","rows","textarea","gcode","onChangeGcode","onBlurGcode","ButtonToolbar","startTranslate","translated","verifiedno","error","openGcode","gcodebuttons","default","marginBottom","setspeed","setSpeed","returnHome","repairPos","manualCoords","xl","lg","sendInvcommand","paddingBottom","Build","Collapse","chamberlength","chamberheight","chamberwidth","onBlurDelay","wiredelay","plasmadelay","xyzdelay","sendTimeDelay","delayvaluescheck","readifyPrint","startstoppausecheck","startPrinting","stopPrint","ProgressBar","now","progress","linecontent","consolelog","resetAll","FHG","FHA","Route1","exact","from","path","onChangeChamber","setText","dropdownClickfalse","checkInputs","setChamberValue","checkPreview","verifyGcode","gcodex","gcodey","gcodez","gcodespeed","fieldx","fieldy","fieldz","invcommand","verifiedyes","stopReading","startbutton","loop1","linenumber","linecount","App","a","b","c","d","setState","low","high","nameV","currentTarget","checkMparm","startbuildCheck","checkState","console","log","alert","concat","verified","option","sendSpeed","wirefeedoption","wirefeeddrop","toolvalues","init","method","headers","mode","body","JSON","stringify","fetch","then","response","json","status","catch","positionvalues","msg","mparmvalues","ok","dudel","delayvalues","flaskvalue","speed","coords","xpos","ypos","preventDefault","data","FormData","append","setInterval","printProgress","percent","clearInterval","linecontentcheck","wirecheck1","linecontentcheck2","Date","getHours","getMinutes","getSeconds","wirecheck2","progressloop","bind","substrateposxG","substrateposyG","wiredelayV","plasmadelayV","xyzdelayV","possend","selectedFile","imageURL","setupvalues1checkserver","fileInfo","upperborderx","upperbordery","upperborderz","startreading","onChangeGcodeFile","checkValue","setTextVariable","uploadInput","activateTCP","closeTCP","f","target","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7fb7d6f7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/setupimg.e1b77187.svg\";","module.exports = __webpack_public_path__ + \"static/media/cross.bd73ca6a.svg\";","module.exports = __webpack_public_path__ + \"static/media/fhg_logo.0619b297.svg\";","module.exports = __webpack_public_path__ + \"static/media/fh_aachen.310951fe.svg\";","import React from 'react';\r\nimport './App.css';\r\nimport { Nav, Dropdown, Navbar, Form, Button, Modal } from \"react-bootstrap\"\r\nimport { LinkContainer } from \"react-router-bootstrap\"\r\nimport Clock from \"react-digital-clock\";\r\n\r\n\r\n\r\nexport default class Nbar extends React.Component {\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <Navbar bg=\"dark\" variant=\"dark\" size=\"lg\" fixed=\"top\">\r\n                    <Navbar.Brand href=\"setup\">Prototype</Navbar.Brand>\r\n                    <Nav className=\"mr-auto\">\r\n                    \r\n                            <LinkContainer to=\"setup\">\r\n                                <Nav.Link>Set Up</Nav.Link>\r\n                            </LinkContainer>\r\n                            <LinkContainer \r\n                                to=\"mp\"\r\n                                >\r\n                                <Nav.Link>Manufacturing Parameters</Nav.Link>\r\n                            </LinkContainer>\r\n                            <LinkContainer to=\"build\">\r\n                                <Nav.Link>Build</Nav.Link>\r\n                            </LinkContainer>\r\n                    </Nav>\r\n                    <Button style = {{backgroundColor: \"#00AB84\",\r\n                            borderColor: \"#00AB84\" }} className='mr-2' disabled>\r\n                        <Form>\r\n                            <Form.Check \r\n                                type=\"switch\"\r\n                                label=\"Expert Mode\" \r\n                                id=\"custom-switch\"\r\n                                checked = {this.props.expertmode}\r\n                                onClick = {(e) => this.props.expertmodeClick(e)}\r\n                                />\r\n                        </Form>\r\n                    </Button>\r\n                    <Button \r\n                        variant=\"info\"\r\n                        style = {{\r\n                            marginRight:\"7px\"\r\n                        }}\r\n                        disabled\r\n                        >\r\n                    <Clock/>\r\n                    </Button>\r\n                    {this.props.dangerbutton &&<Button variant=\"danger\" className='mr-2'>\r\n                        Danger!\r\n                    </Button>}\r\n\r\n                    <Dropdown drop=\"left\">\r\n                        <Dropdown.Toggle variant =\"secondary\">\r\n                            More\r\n                        </Dropdown.Toggle>\r\n\r\n                        <Dropdown.Menu >\r\n                            <Dropdown.Item\r\n                                onClick = {() => this.props.setColumnsize(8,3,4,5)}\r\n                                >Screenformat 4:3</Dropdown.Item>\r\n                            <Dropdown.Item\r\n                                onClick = {() => this.props.setColumnsize(5,5,5,7)}\r\n                                >Screenformat 16:9</Dropdown.Item>\r\n                        </Dropdown.Menu>    \r\n                    </Dropdown>       \r\n                \r\n\r\n                    \r\n                </Navbar> \r\n                <Modal \r\n                    show={this.props.passwordshow}\r\n                    size = \"lg\"\r\n                >\r\n                    <Modal.Header>\r\n                    <Modal.Title>Please Enter Password to Activate Expertmode</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Form>\r\n                            <Form.Group>\r\n                                <Form.Label>Password</Form.Label>\r\n                                <Form.Control\r\n                                    type = \"password\"\r\n                                    onChange = {(e) => this.props.onChange(e,\"password\")}\r\n                                    style = {{\r\n                                        borderColor: `${this.props.passwordbordercolor}`\r\n                                    }}\r\n                                    value = {this.props.password}\r\n                                    onClick = {this.props.passwordOnClick}\r\n                                    />\r\n                                {this.props.passwordnotcorrect &&<Form.Text \r\n                                    className=\"text-muted-red\"\r\n                                    style = {{\r\n                                        color: \"red\"\r\n                                    }}\r\n                                    >\r\n                                Password is not correct. Please try again.\r\n                                </Form.Text>}\r\n                            </Form.Group>\r\n                            </Form> \r\n                    \r\n                            </Modal.Body>\r\n                    <Modal.Footer>\r\n                    <Button \r\n                        style = {{\r\n                            backgroundColor: \"#00AB84\",\r\n                            borderColor: \"#00AB84\"\r\n                        }}\r\n                        onClick = {this.props.passwordCheck} >\r\n                        Enter\r\n                    </Button>\r\n                    <Button \r\n                        onClick = {this.props.passwordClose}\r\n                        variant=\"secondary\">\r\n                        Close\r\n                    </Button>\r\n                    </Modal.Footer>\r\n                </Modal>                   \r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport { Row, Col, Tabs, Tab, ButtonGroup} from 'react-bootstrap';\r\nimport { Stage, Layer, Rect, Text, Arrow } from 'react-konva';\r\nimport Image from 'react-bootstrap/Image';\r\nimport check from './untitled.svg';\r\nimport setupimg from './setupimg.svg';\r\n\r\n\r\n\r\nexport default class Setup extends React.Component {\r\n\r\n\r\n    render() {\r\n        return (\r\n            \r\n        <div>\r\n                <Navbar bg=\"light\" style={{ paddingTop: '60px'}}>\r\n                    <Navbar.Brand>Set Up Parameters</Navbar.Brand>\r\n                    <Dropdown >\r\n                            <Dropdown.Toggle variant = \"secondary\">                                \r\n                                {this.props.dropdowntitle}\r\n                            </Dropdown.Toggle>\r\n\r\n                            <Dropdown.Menu >\r\n                                <Dropdown.Item\r\n                                    onClick={(e) => {this.props.dropdownClick(e)}}\r\n                                >Standard</Dropdown.Item>\r\n                            </Dropdown.Menu>    \r\n                        </Dropdown>\r\n                </Navbar>\r\n                <Row>\r\n                <Col xs={this.props.columnsizeform}>\r\n                <Form>\r\n                <Form.Group as={Row}>\r\n                        <Form.Label column sm={this.props.columnsizetext}>\r\n                            Tool Width [mm]\r\n                        </Form.Label>\r\n                        <Col sm={this.props.columnsizeinput}>\r\n                            <Form.Control\r\n                                \r\n                                style = {{backgroundColor: `${this.props.toolwidthV}`}} \r\n                                value={this.props.toolwidth} \r\n                                onChange={(e) => this.props.onChange(e, \"toolwidth\")}\r\n                                onBlur = {(e) => {this.props.onBlur(e, 0, 350, \"toolwidth\", \"toolwidthV\")}}\r\n                                onClick={(e) => {this.props.onClickdelete(e, \"toolwidth\")}}\r\n                                />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row}> \r\n                        <Form.Label column sm={this.props.columnsizetext}>\r\n                            Tool Length [mm]\r\n                        </Form.Label>\r\n                        \r\n                        <Col sm={this.props.columnsizeinput}>\r\n                            <Form.Control\r\n                                \r\n                                style={{backgroundColor: `${this.props.toollengthV}`}}\r\n                                onClick={(e) => {this.props.onClickdelete(e, \"toollength\")}}\r\n                                name = \"toollength\" \r\n                                value={this.props.toollength}\r\n                                onChange={(e) => {this.props.onChange(e, \"toollength\")}}\r\n                                onBlur={(e) => {this.props.onBlur(e, 0, 400, \"toollength\", \"toollengthV\")}}                       \r\n                            />\r\n\r\n                            \r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row}>\r\n                        <Form.Label column sm={this.props.columnsizetext}>\r\n                            Tool Height [mm]\r\n                        </Form.Label>\r\n                        <Col sm={this.props.columnsizeinput}>\r\n                            <Form.Control \r\n                                \r\n                                style = {{backgroundColor: `${this.props.toolheightV}`}}\r\n                                value={this.props.toolheight} \r\n                                name = \"toolheight\"\r\n                                onChange={(e) => this.props.onChange(e, \"toolheight\")}\r\n                                onBlur = {(e) => {this.props.onBlur(e, 0, 150, \"toolheight\", \"toolheightV\")}}\r\n                                onClick={(e) => {this.props.onClickdelete(e, \"toolheight\")}}\r\n                                />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row}>\r\n                        <Form.Label column sm={this.props.columnsizetext}>\r\n                            Available Chamber Width [mm]\r\n                        </Form.Label>\r\n                        <Col sm={this.props.columnsizeinput}>\r\n                            <Form.Control \r\n                                type=\"number\" \r\n                                disabled \r\n                                value={`${370-this.props.toolwidth}`} \r\n                                onChange={(e) => this.props.onChange(e, \"chamberwidth\")} />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row}>\r\n                        <Form.Label column sm={this.props.columnsizetext}>\r\n                            Available Chamber Length [mm]\r\n                        </Form.Label>\r\n                        <Col sm={this.props.columnsizeinput}>\r\n                            <Form.Control\r\n                                type=\"number\" \r\n                                disabled\r\n                                value={`${560-this.props.toollength}`} \r\n                                onChange={(e) => this.props.onChange(e, \"chamberlength\")}\r\n                                />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row}>\r\n                        <Form.Label column sm={this.props.columnsizetext}>\r\n                            Available Chamber Height [mm]\r\n                        </Form.Label>\r\n                        <Col sm={this.props.columnsizeinput}>\r\n                            <Form.Control \r\n                                type=\"number\"\r\n                                style = {{\r\n                                    backgroundColor: `${this.props.chamberheightV}`\r\n                                }} \r\n                                disabled \r\n                                value={`${185-this.props.toolheight-this.props.nozzledistance-this.props.substrateheight}`} \r\n                                onChange={(e) => this.props.onChange(e, \"chamberheight\")} />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    \r\n                    <Form.Group as={Row}>\r\n                        <Form.Label column sm={this.props.columnsizetext}>\r\n                            Substrate Plate Width [mm]\r\n                        </Form.Label>\r\n                        <Col sm={this.props.columnsizeinput}>\r\n                            <Form.Control \r\n                                style = {{backgroundColor: `${this.props.substratewidthV}`}}\r\n                                value={this.props.substratewidth} \r\n                                onChange={(e) => this.props.onChange(e, \"substratewidth\")} \r\n                                onBlur={(e) => this.props.onBlur(e, 0, 370, \"substratewidth\", \"substratewidthV\")}\r\n                                onClick= {(e) => this.props.onClickdelete(e, \"substratewidth\")}\r\n                                />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row}>\r\n                        <Form.Label column sm={this.props.columnsizetext}>\r\n                            Substrate Plate Length [mm]\r\n                        </Form.Label>\r\n                        <Col sm={this.props.columnsizeinput}>\r\n                            <Form.Control \r\n                                style = {{backgroundColor: `${this.props.substratelengthV}`}} \r\n                                value={this.props.substratelength} \r\n                                onChange={(e) => this.props.onChange(e, \"substratelength\")}\r\n                                onBlur={(e) => this.props.onBlur(e, 0, 560, \"substratelength\", \"substratelengthV\")}\r\n                                onClick={(e) => this.props.onClickdelete(e, \"substratelength\")}\r\n                                />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row}>\r\n                        <Form.Label column sm={this.props.columnsizetext}>\r\n                            Substrate Plate Height [mm]\r\n                        </Form.Label>\r\n                        <Col sm={this.props.columnsizeinput}>\r\n                            <Form.Control\r\n                                \r\n                                style = {{backgroundColor: `${this.props.substrateheightV}`}}  \r\n                                value={this.props.substrateheight} \r\n                                onChange={(e) => this.props.onChange(e, \"substrateheight\")}\r\n                                onBlur = {(e) => this.props.onBlur(e, 0, 100, \"substrateheight\", \"substrateheightV\")}\r\n                                onClick = {(e) => this.props.onClickdelete(e, \"substrateheight\")}\r\n                                />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    \r\n                    <Form.Group as={Row}>\r\n                        <Form.Label column sm={this.props.columnsizetext}>\r\n                            Working Distance [mm]\r\n                        </Form.Label>\r\n                        <Col sm={this.props.columnsizeinput}>\r\n                            <Form.Control \r\n                                style = {{backgroundColor: `${this.props.nozzledistanceV}`}} \r\n                                value={this.props.nozzledistance} \r\n                                onChange={(e) => this.props.onChange(e, \"nozzledistance\")}\r\n                                onClick = {(e) => this.props.onClickdelete(e, \"nozzledistance\")}\r\n                                onBlur = {(e) => this.props.onBlur(e, 2, 30, \"nozzledistance\", \"nozzledistanceV\")}\r\n                                />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    \r\n\r\n                </Form>\r\n                </Col>\r\n                <Col xs={this.props.columnsizeimage}>\r\n                    <Image \r\n                        src = {setupimg}\r\n                        style = {{\r\n                            marginTop: \"10px\"\r\n                        }}\r\n                        />\r\n                </Col>\r\n                </Row>\r\n                <Row>\r\n                <Button\r\n                        \r\n                        disabled = {this.props.submitbutton}\r\n                        style = {{\r\n                            float: \"left\",\r\n                            width: \"180px\",\r\n                            marginLeft: \"50px\",\r\n                            height: \"40px\",\r\n                            backgroundColor: \"#00AB84\",\r\n                            borderColor: \"#00AB84\"\r\n\r\n                            }}\r\n                        onClick = {(e) => this.props.sendSetupValues()}\r\n                        >\r\n                        Send\r\n                </Button>\r\n                <div\r\n                    class = \"imagecontainer\"\r\n                    style = {{\r\n                        \r\n                        alignSelf: \"left\",\r\n                        marginLeft: \"20px\",\r\n                        \r\n                    }}>\r\n\r\n                {this.props.setupvalues1check &&<Image \r\n                    style = {{\r\n                        width: 40,\r\n                        height: 40\r\n                    }}\r\n                    src= {check}\r\n                        />}\r\n                </div>\r\n                \r\n                </Row>\r\n                <br/>\r\n                <Row>\r\n                    <Col>\r\n                <Navbar bg=\"light\">\r\n                    <Navbar.Brand>Position of Substrate Plate</Navbar.Brand>\r\n                </Navbar>  \r\n                <br/>\r\n                \r\n                \r\n                {this.props.dangershow &&<Tabs disabled>\r\n                    <Tab eventKey=\"enter\" title=\"Enter Coordinates\" disabled={this.props.setup2activate}>\r\n                        <br/>\r\n\r\n                        <Form>\r\n                            \r\n                            <Form.Row>\r\n                                <Form.Group as={Col}>\r\n                                    <Form.Control \r\n                                        style = {{backgroundColor: `${this.props.substrateposxV}`}}\r\n                                        placeholder=\"X in mm\" \r\n                                        value={this.props.substrateposx} \r\n                                        onChange={(e) => this.props.onChange(e, \"substrateposx\")}\r\n                                        onBlur = {(e) => this.props.onBlurPos(e, 10, 370-this.props.substratewidth, \"substrateposx\", \"substrateposxV\")}\r\n                                        disabled = {this.props.setup2activate}\r\n                                        onClick = {(e) => this.props.onClickdeletePos(e, \"substrateposx\")}\r\n                                        />                               \r\n                                </Form.Group>\r\n                                <Form.Group as={Col}>\r\n                                    <Form.Control \r\n                                        style = {{backgroundColor: `${this.props.substrateposyV}`}}\r\n                                        placeholder=\"Y in mm\" \r\n                                        value={this.props.substrateposy} \r\n                                        onChange={(e) => this.props.onChange(e, \"substrateposy\")}\r\n                                        onBlur = {(e) => this.props.onBlurPos(e, 10, 560-this.props.substratelength, \"substrateposy\", \"substrateposyV\")}\r\n                                        disabled = {this.props.setup2activate}\r\n                                        onClick = {(e) => this.props.onClickdeletePos(e, \"substrateposy\")}\r\n                                        />\r\n                                </Form.Group>\r\n                                \r\n                                \r\n                            </Form.Row>\r\n                        </Form>\r\n                    </Tab>\r\n                    <Tab eventKey=\"Move Nozzle\" title=\"Move Nozzle\" disabled={this.props.setup2activate}>\r\n                        <Row>\r\n                            <Col>\r\n                                <br/>\r\n                                \r\n                                <ButtonGroup vertical className=\"d-flex\">\r\n                                    <DropdownButton as={ButtonGroup} title={`Stepsize: ${this.props.stepsize} mm/Click`} >\r\n                                        <Dropdown.Item\r\n                                            onClick = {() => this.props.setStepSize(\"a\")}\r\n                                            >1 mm per Click</Dropdown.Item>\r\n                                        <Dropdown.Item\r\n                                            onClick = {() => this.props.setStepSize(\"b\")}\r\n                                            >5 mm per Click</Dropdown.Item>\r\n                                        <Dropdown.Item\r\n                                            onClick = {() => this.props.setStepSize(\"c\")}\r\n                                            >10 mm per Click</Dropdown.Item>\r\n                                        <Dropdown.Item\r\n                                            onClick = {() => this.props.setStepSize(\"d\")}\r\n                                            >50 mm per Click</Dropdown.Item>\r\n                                        <Dropdown.Item\r\n                                            onClick = {() => this.props.setStepSize(\"e\")}\r\n                                            >100 mm per Click</Dropdown.Item>\r\n                                    </DropdownButton>\r\n                                    <Button variant=\"secondary\"disabled>\r\n                                    {this.props.printheadpos}\r\n                                    </Button>\r\n                                    <Button \r\n                                        variant=\"secondary\"\r\n                                        onClick = {this.props.setPosmanualsubstrate}\r\n                                        >\r\n                                    Set Nozzle Position as Substrate Plate Coordinates\r\n                                    </Button>\r\n                                </ButtonGroup>\r\n                                \r\n                            </Col>\r\n                            <Col>\r\n                                <br/>\r\n                                <ButtonGroup className=\"d-flex\">\r\n                                    <Button \r\n                                        variant=\"secondary\"\r\n                                        onClick = {this.props.movenozzleXplus}\r\n                                        >+ X-Axis</Button>\r\n                                    <Button \r\n                                        variant=\"secondary\"\r\n                                        onClick = {this.props.movenozzleXminus}\r\n                                        >- X-Axis</Button>\r\n                                </ButtonGroup>\r\n                                <ButtonGroup className=\"d-flex\">\r\n                                    <Button \r\n                                        variant=\"secondary\"\r\n                                        onClick = {this.props.movenozzleYplus}\r\n                                        >+ Y-Axis</Button>\r\n                                    <Button\r\n                                        variant=\"secondary\"\r\n                                        onClick = {this.props.movenozzleYminus}\r\n                                        >- Y-Axis</Button>\r\n                                </ButtonGroup>\r\n                                <ButtonGroup className=\"d-flex\">\r\n                                    <Button\r\n                                        variant=\"secondary\"\r\n                                        onClick = {this.props.movenozzleZplus}\r\n                                        >+ Z-Axis</Button>\r\n                                    <Button \r\n                                        variant=\"secondary\"\r\n                                        onClick = {this.props.movenozzleZminus}\r\n                                        >- Z-Axis</Button>\r\n\r\n                                </ButtonGroup>\r\n                            </Col>\r\n                        </Row>\r\n                    </Tab>\r\n                </Tabs>}\r\n                </Col>\r\n                \r\n                \r\n              \r\n                <Col>\r\n                <Navbar bg=\"light\">\r\n                    <Navbar.Brand>Definition of Reference Point</Navbar.Brand>\r\n                </Navbar>          \r\n                <br/>\r\n                \r\n                {this.props.dangershow &&<Tabs>\r\n                    <Tab \r\n                        eventKey=\"enter\" \r\n                        title=\"Enter Coordinates\"\r\n                        disabled = {this.props.setup2activate}\r\n                        >\r\n                        <br/>\r\n\r\n                        <Form>\r\n                            \r\n                            <Form.Row>\r\n                                <Form.Group as={Col}>\r\n                                    <Form.Control \r\n                                        style = {{backgroundColor: `${this.props.rpposxV}`}}\r\n                                        placeholder=\"X in mm\"\r\n                                        value = {this.props.rpposx}\r\n                                        onChange={(e) => this.props.onChange(e, \"rpposx\")}\r\n                                        onBlur = {(e) => this.props.onBlurPos(e, 0, 370, \"rpposx\", \"rpposxV\")}\r\n                                        disabled = {this.props.setup2activate}\r\n                                        onClick = {(e) => this.props.onClickdeletePos(e, \"rpposx\")}\r\n                                        />                               \r\n                                </Form.Group>\r\n                                <Form.Group as={Col}>\r\n                                    <Form.Control \r\n                                        style = {{backgroundColor: `${this.props.rpposyV}`}}\r\n                                        placeholder=\"Y in mm\"\r\n                                        value = {this.props.rpposy}\r\n                                        onChange={(e) => this.props.onChange(e, \"rpposy\")}\r\n                                        onBlur = {(e) => this.props.onBlurPos(e, 0, 560, \"rpposy\", \"rpposyV\")}\r\n                                        disabled = {this.props.setup2activate}\r\n                                        onClick = {(e) => this.props.onClickdeletePos(e, \"rpposy\")}\r\n                                        />\r\n                                </Form.Group>\r\n                                \r\n                                \r\n                            </Form.Row>\r\n                        </Form>\r\n                    </Tab>\r\n                    <Tab \r\n                        eventKey=\"Move Nozzle\" \r\n                        title=\"Move Nozzle\" \r\n                        disabled = {this.props.setup2activate}\r\n                        >\r\n                        <Row>\r\n                            <Col>\r\n                                <br/>\r\n                                \r\n                                <ButtonGroup vertical className=\"d-flex\">\r\n                                <DropdownButton as={ButtonGroup} title={`Stepsize: ${this.props.stepsize} mm/Click`} >\r\n                                        <Dropdown.Item\r\n                                            onClick = {() => this.props.setStepSize(\"a\")}\r\n                                            >1 mm per Click</Dropdown.Item>\r\n                                        <Dropdown.Item\r\n                                            onClick = {() => this.props.setStepSize(\"b\")}\r\n                                            >5 mm per Click</Dropdown.Item>\r\n                                        <Dropdown.Item\r\n                                            onClick = {() => this.props.setStepSize(\"c\")}\r\n                                            >10 mm per Click</Dropdown.Item>\r\n                                        <Dropdown.Item\r\n                                            onClick = {() => this.props.setStepSize(\"d\")}\r\n                                            >50 mm per Click</Dropdown.Item>\r\n                                        <Dropdown.Item\r\n                                            onClick = {() => this.props.setStepSize(\"e\")}\r\n                                            >100 mm per Click</Dropdown.Item>\r\n                                    </DropdownButton>\r\n                                    <Button variant=\"secondary\" disabled>\r\n                                    {this.props.printheadpos}\r\n                                    </Button>\r\n                                    <Button \r\n                                        variant=\"secondary\"\r\n                                        onClick = {this.props.setPosmanualrppos}\r\n                                        >\r\n                                    Set Nozzle Position as Reference Point\r\n                                    </Button>\r\n                                </ButtonGroup>\r\n                                \r\n                            </Col>\r\n                            <Col>\r\n                                <br/>\r\n                                <ButtonGroup className=\"d-flex\">\r\n                                    <Button \r\n                                        variant=\"secondary\"\r\n                                        onClick = {this.props.movenozzleXplus}\r\n                                        >+ X-Axis</Button>\r\n                                    <Button \r\n                                        variant=\"secondary\"\r\n                                        onClick = {this.props.movenozzleXminus}\r\n                                        >- X-Axis</Button>\r\n                                </ButtonGroup>\r\n                                <ButtonGroup className=\"d-flex\">\r\n                                    <Button \r\n                                        variant=\"secondary\"\r\n                                        onClick = {this.props.movenozzleYplus}\r\n                                        >+ Y-Axis</Button>\r\n                                    <Button\r\n                                        variant=\"secondary\"\r\n                                        onClick = {this.props.movenozzleYminus}\r\n                                        >- Y-Axis</Button>\r\n                                </ButtonGroup>\r\n                                <ButtonGroup className=\"d-flex\">\r\n                                    <Button\r\n                                        variant=\"secondary\"\r\n                                        onClick = {this.props.movenozzleZplus}\r\n                                        >+ Z-Axis</Button>\r\n                                    <Button \r\n                                        variant=\"secondary\"\r\n                                        onClick = {this.props.movenozzleZminus}\r\n                                        >- Z-Axis</Button>\r\n\r\n                                </ButtonGroup>\r\n                            </Col>\r\n                         </Row>\r\n                         \r\n                         </Tab>\r\n                         </Tabs>}\r\n                         </Col>\r\n                         </Row>\r\n                         <Row>\r\n                            <Col>\r\n                            {this.props.dangershow &&<Button\r\n                                   \r\n                                    disabled = {this.props.previewbutton}\r\n                                    style ={{\r\n                                        backgroundColor: \"#00AB84\",\r\n                                        borderColor: \"#00AB84\",\r\n\r\n                                        float: \"left\",\r\n                                        width: \"180px\",\r\n                                        marginLeft: \"40px\",\r\n                                        marginTop: \"20px\"\r\n\r\n                                    }}\r\n                                    onClick = {(e) => this.props.sendSetupValues2()}\r\n                                    >\r\n                                    Send\r\n                                </Button>}\r\n                                <div>\r\n                                {this.props.setupvalues2check && \r\n                                <Image \r\n                                    src={check} \r\n                                    style = {{\r\n                                        width: 40,\r\n                                        height: 40,\r\n                                        float: \"left\",\r\n                                        marginLeft: \"20px\",\r\n                                        marginTop: \"20px\"\r\n                                        }}\r\n                                        />}\r\n                                </div>\r\n                                \r\n                                </Col>\r\n                                <Col>\r\n                                {this.props.dangershow &&<Button\r\n                                    onClick = {(e) => this.props.showPreview(e)}\r\n                                    style = {{\r\n                                        float: \"left\",\r\n                                        width: \"180px\",\r\n                                        marginLeft: \"0px\",\r\n                                        marginTop: \"20px\",\r\n                                        \r\n                                        }}\r\n\r\n                                    disabled = {this.props.previewbutton}\r\n                                    variant = \"info\" \r\n                                    >\r\n                                    View Graphic\r\n                                </Button>}\r\n                        \r\n                                \r\n                            </Col>\r\n                            <Col>\r\n                                \r\n                            </Col>\r\n                         </Row>\r\n                        \r\n                         {this.props.dangerbutton &&<Button\r\n                            variant = \"danger\"\r\n                            block\r\n                            style = {{\r\n                                height: \"100px\",\r\n                                fontSize: \"20px\"\r\n\r\n                            }}\r\n                            >\r\n                                To continue please enter correct values above.\r\n                            </Button>}\r\n\r\n                        \r\n                        <br/>\r\n                \r\n                    {this.props.showgraphicalrepresentation &&<div>\r\n                    <Navbar \r\n                        bg='light'\r\n                        \r\n                        >\r\n                        <Navbar.Brand>Graphical Representation of Entered Values</Navbar.Brand>\r\n                    </Navbar>\r\n                     <Stage width={600} height={590}>\r\n                        <Layer>\r\n                            <Text\r\n                                text='X'\r\n                                x={105}\r\n                                y={5}\r\n                                />\r\n                            <Text\r\n                                text='Y'\r\n                                x={5}\r\n                                y={105}\r\n                                />                            \r\n                            <Arrow\r\n                                \r\n                                points={[10,10,100,10]}\r\n                                \r\n                                pointerLength={5}\r\n                                pointerWidth={5}\r\n                                fill=\"black\"\r\n                                stroke=\"black\"\r\n                                strokeWidth={1}\r\n                                />\r\n                            <Arrow\r\n                                points={[10,10,10,100]}\r\n                                pointerLength={5}\r\n                                pointerWidth={5}\r\n                                fill=\"black\"\r\n                                stroke=\"black\"\r\n                                strokeWidth={1}\r\n                                />\r\n                            <Rect\r\n                                x={20}\r\n                                y={20}\r\n                                width={370}\r\n                                height={560}\r\n                                fill='white'\r\n                                stroke='black'\r\n                                />\r\n                            {this.props.showpreview &&<Rect\r\n                                x={20 + parseInt(this.props.substrateposx)}\r\n                                y={20 + parseInt(this.props.substrateposy)}\r\n                                width={this.props.substratewidth}\r\n                                height={this.props.substratelength}\r\n                                fill=\"#00AB84\"\r\n                                stroke='black'\r\n                                />}\r\n                            {this.props.showpreview &&<Text\r\n                                text='X'\r\n                                x={20 + parseInt(this.props.rpposx)}\r\n                                y={20 + parseInt(this.props.rpposy)}\r\n                                />}\r\n                        </Layer>\r\n                        </Stage>               \r\n                \r\n                        </div>}\r\n                    <Navbar \r\n                        bg=\"light\"\r\n                        style={{ paddingTop: '60px'}}\r\n                        >\r\n\r\n                    \r\n                    </Navbar>\r\n                  \r\n                        \r\n            </div>\r\n                      \r\n\r\n        );\r\n    }\r\n\r\n    \r\n}\r\n\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { Navbar, Tabs, Tab, Button, Form, Row, Col, InputGroup, FormControl, FormGroup, ButtonToolbar, Image, Dropdown, ButtonGroup, DropdownButton } from 'react-bootstrap'\r\nimport check from \"./untitled.svg\"\r\nimport error from \"./cross.svg\"\r\n\r\n\r\n\r\n\r\nexport default class Mparm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.fileInput = React.createRef();\r\n        this.chosenfilename = \"File Name\"\r\n        this.state = {\r\n            uploadcolor: \"\",\r\n        }\r\n    }\r\n    \r\n\r\n        \r\n    render(){\r\n        return(\r\n            <div>\r\n                <br/> \r\n                <Navbar bg=\"light\" style={{ paddingTop: '40px'}}>\r\n                    <Navbar.Brand>Enter manufacturing parameters</Navbar.Brand>\r\n                </Navbar>\r\n                <br/>\r\n\r\n                <Form>\r\n                    <Form.Group as={Row}>\r\n                        <Form.Label column sm={2}>\r\n                            Power\r\n                        </Form.Label>\r\n                        <Col sm={10}>\r\n                            <Form.Control\r\n                                style = {{backgroundColor: `${this.props.powerV}`}}\r\n                                placeholder=\"in Watts\" \r\n                                value = {this.props.power} \r\n                                onChange={(e) => this.props.onChange(e, \"power\")}\r\n                                onBlur={(e) => this.props.onBlurMparm(e, 50, 100, \"power\", \"powerV\")} \r\n                                onClick = {(e) => this.props.onClickdelete(e, \"power\")}\r\n                                />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row}>\r\n                        <Form.Label column sm={2}>\r\n                            Gas Flow 1\r\n                        </Form.Label>\r\n                        <Col sm={10}>\r\n                            <Form.Control \r\n                                style = {{backgroundColor: `${this.props.jetdiameterV}`}}\r\n                                placeholder=\"in mm\" \r\n                                value = {this.props.jetdiameter}\r\n                                onChange={(e) => this.props.onChange(e, \"jetdiameter\")} \r\n                                onBlur = {(e) => this.props.onBlurMparm(e, 50, 100, \"jetdiameter\", \"jetdiameterV\")}\r\n                                onClick = {(e) => this.props.onClickdelete(e, \"jetdiameter\")}\r\n                                />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row}>\r\n                        <Form.Label column sm={2}>\r\n                            Gas Flow 2\r\n                        </Form.Label>\r\n                        <Col sm={10}>\r\n                            <Form.Control\r\n                                style = {{backgroundColor: `${this.props.gasflowV}`}}\r\n                                placeholder=\"in cm³/s\" \r\n                                value = {this.props.gasflow} \r\n                                onChange={(e) => this.props.onChange(e, \"gasflow\")}\r\n                                onBlur={(e) => this.props.onBlurMparm(e, 50, 100, \"gasflow\", \"gasflowV\")}\r\n                                onClick = {(e) => this.props.onClickdelete(e, \"gasflow\")}\r\n                                />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row}>\r\n                        \r\n                        <Form.Label column sm={2}>\r\n                        <Dropdown column sm={2}>\r\n                            <Dropdown.Toggle style = {{\r\n                                backgroundColor: \"white\",\r\n                                color: \"black\",\r\n                                borderColor: \"black\"\r\n                            }}>\r\n                                {this.props.wirefeeddropdowntext}\r\n                            </Dropdown.Toggle>\r\n                            <Dropdown.Menu>\r\n                                <Dropdown.Item\r\n                                    onClick = {() => this.props.dropdownWirefeed(\"a\")}\r\n                                    >Scaling Factor</Dropdown.Item>\r\n                                <Dropdown.Item\r\n                                    onClick = {() => this.props.dropdownWirefeed(\"b\")}\r\n                                    >Overwrite Explicit Value for the Entire Print Process</Dropdown.Item>\r\n                                <Dropdown.Item\r\n                                    onClick = {() => this.props.dropdownWirefeed(\"c\")}\r\n                                    >Set Value for Entire G-Code without preexisting Value</Dropdown.Item>\r\n                            </Dropdown.Menu>\r\n\r\n                        </Dropdown>\r\n                        </Form.Label>\r\n                        <Col sm={10}>\r\n                            <Form.Control \r\n                                style = {{\r\n                                    backgroundColor: `${this.props.wirefeedV}`,\r\n                                    marginTop:\"7px\"\r\n                                }}\r\n                                placeholder={this.props.wirefeedplaceholder}\r\n                                value = {this.props.wirefeed} \r\n                                onChange={(e) => this.props.onChange(e, \"wirefeed\")} \r\n                                onBlur = {(e) => this.props.onBlurMparm(e, 0, 15, \"wirefeed\", \"wirefeedV\")}\r\n                                onClick = {(e) => this.props.onClickdelete(e, \"wirefeed\")}\r\n                                />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row}>\r\n                        <Form.Label column sm={2}>\r\n                            Print Head Speed\r\n                        </Form.Label>\r\n                        <Col sm={10}>\r\n                            <Form.Control \r\n                                style = {{backgroundColor: `${this.props.printheadspeedV}`}}\r\n                                placeholder=\"in mm/s\" \r\n                                value = {this.props.printheadspeed} \r\n                                onChange={(e) => this.props.onChange(e, \"printheadspeed\")}\r\n                                onBlur={(e) => this.props.onBlurMparm(e, 50, 100, \"printheadspeed\", \"printheadspeedV\")}\r\n                                onClick = {(e) => this.props.onClickdelete(e, \"printheadspeed\")}\r\n                                />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row}>\r\n                        <Form.Label column sm={2}>\r\n                            Working Distance\r\n                        </Form.Label>\r\n                        <Col sm={10}>\r\n                            <Form.Control\r\n                                style = {{backgroundColor: `${this.props.nozzledistanceV}`}}\r\n                                placeholder=\"in mm\" \r\n                                value = {this.props.nozzledistance} \r\n                                onChange={(e) => this.props.onChange(e, \"nozzledistance\")}\r\n                                onBlur={(e) => this.props.onBlurMparm(e, 2, 30, \"nozzledistance\", \"nozzledistanceV\")}\r\n                                onClick = {(e) => this.props.onClickdelete(e, \"nozzledistance\")}\r\n                                />\r\n                        </Col>\r\n                    </Form.Group>\r\n                </Form>\r\n                <Row>\r\n                <Col>\r\n                    <Button\r\n                        \r\n                        disabled = {this.props.mparmsend}\r\n                        style ={{\r\n                            float: \"left\",\r\n                            width: \"180px\",\r\n                            marginLeft: \"50px\",\r\n                            backgroundColor: \"#00AB84\",\r\n                            borderColor: \"#00AB84\"\r\n                        }}\r\n                        onClick = {this.props.sendMparmValues}\r\n                        >\r\n                        Send\r\n                    </Button>\r\n                \r\n                    {this.props.mparmvaluescheck &&<Image src={check} style = {{height:40, width:40, float: \"left\", marginLeft: \"20px\"}}/>}\r\n                </Col>\r\n                </Row>\r\n                <br/>\r\n\r\n\r\n\r\n                <Navbar bg=\"light\" >\r\n                    <Navbar.Brand>Enter G-Code</Navbar.Brand>\r\n                </Navbar>\r\n                <br/>\r\n                \r\n                <Tabs>\r\n                    <Tab eventKey=\"Read from File\" title='Read from File'>\r\n                        <br/>\r\n                    <Row>\r\n                    <div className=\"input-group\">\r\n                        <div className=\"input-group-prepend\">\r\n                            <span className=\"input-group-text\" id=\"inputGroupFileAddon01\"\r\n                                style = {{\r\n                                    marginLeft: \"67px\"\r\n                                }}>\r\n                            Upload\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"custom-file\"\r\n                            style = {{\r\n                                marginRight: \"67px\"\r\n                            }}\r\n                            >\r\n                            <input\r\n                                ref = {this.fileInput} \r\n                                type=\"file\"\r\n                                className=\"custom-file-input\"\r\n                                value = {this.filename}\r\n                                onChange = {(e) => this.props.fileSelectionNameOnChange(e, this.fileInput.current.files[0].name)}\r\n                                \r\n                                \r\n                                \r\n                                />\r\n                            <label className=\"custom-file-label\" htmlFor=\"inputGroupFile01\">\r\n                                {this.props.uploadfilenameApp}\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                   </Row>\r\n                   <Row>\r\n                    <div>\r\n                    <Button \r\n                        \r\n                        style = {{\r\n                            \r\n                            marginLeft: \"67px\",\r\n                            marginTop: \"20px\",\r\n                            alignSelf: \"right\"\r\n                        }}\r\n                        onClick = {(e) => this.props.fileUpload(e, this.fileInput.current.files[0])}\r\n                        variant = \"secondary\"\r\n                        >\r\n                            Upload\r\n                    </Button>\r\n\r\n                    {this.props.uploadbutton &&<Image\r\n                        src = {check}\r\n                        style = {{\r\n                            marginLeft: \"10px\",\r\n                            marginTop: \"20px\",\r\n                            height: 40,\r\n                            width: 40\r\n                        }}\r\n                        disabled\r\n                        />}\r\n                           \r\n\r\n                        \r\n                                 \r\n                                 </div>\r\n                    \r\n                    </Row>  \r\n                    </Tab>\r\n                    <Tab eventKey=\"Enter manually\" title=\"Enter manually\">\r\n                        <br/>\r\n                        <Row>\r\n                            <Col>\r\n                            <InputGroup>\r\n                                <InputGroup.Prepend>\r\n                                    <InputGroup.Text>X</InputGroup.Text>\r\n                                </InputGroup.Prepend>\r\n                                <FormControl \r\n                                    placeholder=\"in mm\" \r\n                                    type=\"number\"\r\n                                    onChange = {(e) => this.props.onChange(e, \"gcodex\")}\r\n                                    />\r\n                            </InputGroup>\r\n                            </Col>\r\n                            <Col>\r\n                            <InputGroup>\r\n                                <InputGroup.Prepend>\r\n                                    <InputGroup.Text>Y</InputGroup.Text>\r\n                                </InputGroup.Prepend>\r\n                                <FormControl \r\n                                    placeholder=\"in mm\" \r\n                                    type=\"number\"\r\n                                    onChange = {(e) => this.props.onChange(e, \"gcodey\")}\r\n                                    />\r\n                            </InputGroup>\r\n                            </Col>\r\n                            <Col>\r\n                            <InputGroup>\r\n                                <InputGroup.Prepend>\r\n                                    <InputGroup.Text>Z</InputGroup.Text>\r\n                                </InputGroup.Prepend>\r\n                                <FormControl \r\n                                    placeholder=\"in mm\" \r\n                                    type=\"number\"\r\n                                    onChange = {(e) => this.props.onChange(e, \"gcodez\")}\r\n                                    />\r\n                            </InputGroup>\r\n                            </Col>\r\n                            <Col>\r\n                            <InputGroup>\r\n                                <InputGroup.Prepend>\r\n                                    <InputGroup.Text>Speed</InputGroup.Text>\r\n                                </InputGroup.Prepend>\r\n                                <FormControl \r\n                                    placeholder=\"in mm/s\" \r\n                                    type=\"number\"\r\n                                    onChange = {(e) => this.props.onChange(e, \"gcodespeed\")}\r\n                                    />\r\n                            </InputGroup>\r\n                            </Col>\r\n                            <Col>\r\n                                <Button \r\n                                    variant='secondary' \r\n                                    block\r\n                                    onClick = {(e) => this.props.createGcode()}\r\n                                    >\r\n                                    Add\r\n                                </Button>\r\n                            </Col>\r\n                            <Col>\r\n                                <Button\r\n                                    variant = 'secondary'\r\n                                    onClick = {() => this.props.deleteGcode()}\r\n                                    block\r\n                                    >\r\n                                    Delete\r\n                                </Button>\r\n                            </Col>\r\n                            <Col>   \r\n                                <Button\r\n                                    block\r\n                                    variant = 'secondary'\r\n                                    onClick = {() => this.props.editGcode()}\r\n                                    >\r\n                                        Edit\r\n                                    </Button>\r\n                            </Col>\r\n                        </Row>\r\n                        <br/>\r\n                        <FormGroup>\r\n                            <Form.Control \r\n                                as=\"textarea\" \r\n                                rows=\"4\"\r\n                                disabled = {this.props.textarea} \r\n                                value= {this.props.gcode}\r\n                                onChange = {(e) => this.props.onChangeGcode(e)}\r\n                                onBlur = {(e) => this.props.onBlurGcode(e)}\r\n                                />\r\n                            \r\n                        </FormGroup>\r\n                        \r\n                        \r\n                          \r\n                    </Tab>\r\n                </Tabs>\r\n\r\n                <br/>\r\n                <ButtonToolbar style={{marginLeft: '50px'}}>\r\n                    <Button \r\n                        variant='secondary' \r\n                        style={{\r\n                            marginRight: '10px'\r\n                        }}\r\n                        onClick = {this.props.startTranslate}\r\n                    \r\n                    >Translate/Verify G-Code</Button>\r\n                    {this.props.translated &&<Image\r\n                        src = {check}\r\n                        style = {{\r\n                            marginRight: \"10px\",\r\n                            height: 40,\r\n                            width: 40\r\n                        }}\r\n                        disabled\r\n                        />}\r\n                    {this.props.verifiedno &&<Image\r\n                        src = {error}\r\n                        style = {{\r\n                            marginRight: \"10px\",\r\n                            height: 40,\r\n                            width: 28\r\n                        }}\r\n                        />}\r\n                    <Button \r\n                        variant='info'\r\n                        style = {{\r\n                            marginRight: \"10px\"\r\n                        }}\r\n                        onClick = {this.props.openGcode}\r\n                        disabled = {this.props.gcodebuttons}\r\n                        >View translated G-Code</Button>\r\n                    \r\n                    \r\n                </ButtonToolbar>\r\n                \r\n                {this.props.expertmode &&<Navbar bg='success' variant='dark'>\r\n                    <Navbar.Brand>Expert Mode</Navbar.Brand>\r\n                </Navbar>}\r\n                <br/>\r\n                {this.props.expertmode &&<Form>\r\n                    <FormGroup as={Row}>\r\n                        <Form.Label column sm={2}>\r\n                            Calculated Frequency\r\n                        </Form.Label>\r\n                        <Col sm={10}>\r\n                            <Form.Control type=\"number\" disabled default='2,4 Hz'/>\r\n                        </Col>\r\n                        </FormGroup>\r\n                </Form>}\r\n                {this.props.expertmode &&<div>\r\n                        <Button style= {{marginBottom: \"20px\",backgroundColor: \"#00AB84\",\r\n                            borderColor: \"#00AB84\"}}>\r\n                            Access to Plasma Controller Interface\r\n                        </Button>\r\n                        \r\n                        \r\n                        <Navbar bg='light'>\r\n                            \r\n                                <Navbar.Brand\r\n                                    style = {{\r\n                                        float:\"left\"\r\n                                    }}>Move Printhead freely</Navbar.Brand>\r\n                            \r\n                            \r\n                            \r\n                                \r\n                            </Navbar>\r\n\r\n                        <Row>\r\n                            \r\n                            \r\n                            <Col>\r\n                                <br/>\r\n                                \r\n                                <ButtonGroup vertical className=\"d-flex\">\r\n                                    <DropdownButton as={ButtonGroup} title={`Stepsize: ${this.props.stepsize} mm/Click`} >\r\n                                        <Dropdown.Item\r\n                                            onClick = {() => this.props.setStepSize(\"a\")}\r\n                                            >1 mm per Click</Dropdown.Item>\r\n                                        <Dropdown.Item\r\n                                            onClick = {() => this.props.setStepSize(\"b\")}\r\n                                            >5 mm per Click</Dropdown.Item>\r\n                                        <Dropdown.Item\r\n                                            onClick = {() => this.props.setStepSize(\"c\")}\r\n                                            >10 mm per Click</Dropdown.Item>\r\n                                        <Dropdown.Item\r\n                                            onClick = {() => this.props.setStepSize(\"d\")}\r\n                                            >50 mm per Click</Dropdown.Item>\r\n                                        <Dropdown.Item\r\n                                            onClick = {() => this.props.setStepSize(\"e\")}\r\n                                            >100 mm per Click</Dropdown.Item>\r\n                                    </DropdownButton>\r\n                                    <DropdownButton as={ButtonGroup} title ={`Speed: ${this.props.setspeed} mm/s`}>\r\n                                        <Dropdown.Item\r\n                                            onClick = {() => this.props.setSpeed(\"a\")}>\r\n                                                10 mm/s\r\n                                        </Dropdown.Item>\r\n                                        <Dropdown.Item\r\n                                            onClick = {() => this.props.setSpeed(\"b\")}>\r\n                                                20 mm/s\r\n                                        </Dropdown.Item>\r\n                                        <Dropdown.Item\r\n                                            onClick = {() => this.props.setSpeed(\"c\")}>\r\n                                                50 mm/s\r\n                                            </Dropdown.Item>\r\n                                    </DropdownButton>\r\n                                    \r\n                                    <Button \r\n                                        onClick = {this.props.returnHome}\r\n                                        variant=\"secondary\" >\r\n                                        Return to Reference Point\r\n                                    </Button>\r\n                                    <Button\r\n                                        onClick = {this.props.repairPos}\r\n                                        variant = \"secondary\"\r\n                                        >\r\n                                            Repair Position\r\n                                        </Button>\r\n                                    \r\n                                </ButtonGroup>\r\n                                \r\n                            </Col>\r\n                            <Col>\r\n                                <br/>\r\n                                <ButtonGroup className=\"d-flex\">\r\n                                    <Button \r\n                                        variant=\"secondary\"\r\n                                        onClick = {this.props.movenozzleXplus}\r\n                                        >+ X-Axis</Button>\r\n                                    <Button \r\n                                        variant=\"secondary\"\r\n                                        onClick = {this.props.movenozzleXminus}\r\n                                        >- X-Axis</Button>\r\n                                </ButtonGroup>\r\n                                <ButtonGroup className=\"d-flex\">\r\n                                    <Button \r\n                                        variant=\"secondary\"\r\n                                        onClick = {this.props.movenozzleYplus}\r\n                                        >+ Y-Axis</Button>\r\n                                    <Button \r\n                                        variant=\"secondary\"\r\n                                        onClick = {this.props.movenozzleYminus}\r\n                                        >- Y-Axis</Button>\r\n                                </ButtonGroup>\r\n                                <ButtonGroup className=\"d-flex\">\r\n                                    <Button \r\n                                        variant=\"secondary\"\r\n                                        onClick = {this.props.movenozzleZplus}\r\n                                        >+ Z-Axis</Button>\r\n                                    <Button \r\n                                        variant=\"secondary\"\r\n                                        onClick = {this.props.movenozzleZminus}\r\n                                        >- Z-Axis</Button>\r\n\r\n                                </ButtonGroup>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row\r\n                            style = {{\r\n                                marginTop: \"20px\"\r\n                            }}>\r\n                            <Col>\r\n                            <InputGroup>\r\n                                <InputGroup.Prepend>\r\n                                    <InputGroup.Text>X</InputGroup.Text>\r\n                                </InputGroup.Prepend>\r\n                                <FormControl \r\n                                    placeholder=\"in mm\" \r\n                                    type=\"number\"\r\n                                    onChange = {(e) => this.props.onChange(e, \"fieldx\")}\r\n                                    />\r\n                            </InputGroup>\r\n                            </Col>\r\n                            <Col>\r\n                            <InputGroup>\r\n                                <InputGroup.Prepend>\r\n                                    <InputGroup.Text>Y</InputGroup.Text>\r\n                                </InputGroup.Prepend>\r\n                                <FormControl \r\n                                    placeholder=\"in mm\" \r\n                                    type=\"number\"\r\n                                    onChange = {(e) => this.props.onChange(e, \"fieldy\")}\r\n                                    />\r\n                            </InputGroup>\r\n                            </Col>\r\n                            <Col>\r\n                            <InputGroup>\r\n                                <InputGroup.Prepend>\r\n                                    <InputGroup.Text>Z</InputGroup.Text>\r\n                                </InputGroup.Prepend>\r\n                                <FormControl \r\n                                    placeholder=\"in mm\" \r\n                                    type=\"number\"\r\n                                    onChange = {(e) => this.props.onChange(e, \"fieldz\")}\r\n                                    />\r\n                            </InputGroup>\r\n                            </Col>\r\n                            <Col>\r\n                                <Button \r\n                                    variant='secondary' \r\n                                    block\r\n                                    onClick = {(e) => this.props.manualCoords()}\r\n                                    >\r\n                                    Go\r\n                                </Button>\r\n                            </Col>\r\n                            </Row>\r\n                            <Row\r\n                                style = {{\r\n                                    marginTop:\"20px\"\r\n                                }}>\r\n                                <Col xl lg=\"7\">\r\n                                <InputGroup\r\n                                    style = {{\r\n                                        marginLeft: \"20px\",\r\n                                        \r\n                                    }}>\r\n                                    <InputGroup.Prepend>\r\n                                        <InputGroup.Text>Individual Command</InputGroup.Text>\r\n                                    </InputGroup.Prepend>\r\n                                \r\n                                    <FormControl\r\n                                        placeholder=\"type whatever you want\"\r\n                                        onChange = {(e) => this.props.onChange(e, \"invcommand\")}\r\n                                        />\r\n                                    </InputGroup>\r\n                                    </Col>\r\n                                    <Col xs lg=\"3\">\r\n                                    <Button\r\n                                        block\r\n                                        style = {{\r\n                                            marginRight:\"10px\"\r\n                                        }}\r\n                                        onClick = {() => this.props.sendInvcommand()}>\r\n                                        Send\r\n                                    </Button>\r\n                                    \r\n                                    </Col>\r\n                            </Row>\r\n                        \r\n                        </div>}\r\n                <br/>\r\n\r\n                <Navbar bg='light' style={{paddingBottom: '60px'}}>\r\n\r\n                </Navbar>\r\n                \r\n                    \r\n                \r\n            </div>\r\n\r\n        )\r\n    }\r\n    \r\n\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport { Navbar, Button, Form, Row, Col, InputGroup, FormGroup, Nav, Image, ProgressBar} from 'react-bootstrap';\r\nimport check from \"./untitled.svg\"\r\n\r\n\r\n\r\n\r\nexport default class Build extends React.Component {\r\n\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n            <Navbar bg=\"light\" style={{ paddingTop: '60px'}}>\r\n                <Navbar.Brand>Overview - Set Up Values</Navbar.Brand>\r\n                <Navbar.Collapse>\r\n                <Nav className=\"justify-content-end\" style={{ width: \"100%\"}}>\r\n                    <Button variant=\"secondary\" disabled>in mm</Button>\r\n                </Nav>\r\n                </Navbar.Collapse>\r\n                \r\n                \r\n            </Navbar>\r\n            <br/>\r\n            \r\n            \r\n            <Form>\r\n            <Row>\r\n            <Col>\r\n                <Form.Group as={Row}>\r\n                    <Form.Label column sm={4}>\r\n                        Tool Dimensions\r\n                    </Form.Label>\r\n                \r\n                    <Col sm={8}>\r\n                    <InputGroup>\r\n                        <InputGroup.Prepend>\r\n                            <InputGroup.Text>Length</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <Form.Control value={this.props.toollength} disabled />\r\n                        <InputGroup.Prepend>\r\n                            <InputGroup.Text>Heigth</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <Form.Control value={this.props.toolheight} disabled/>\r\n                        <InputGroup.Prepend>\r\n                            <InputGroup.Text>Width</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <Form.Control value={this.props.toolwidth} disabled />\r\n                    </InputGroup>  \r\n                    </Col>\r\n                   \r\n                </Form.Group>\r\n                <Form.Group as={Row}>\r\n                    <Form.Label column sm={4}>\r\n                        Chamber Dimensions\r\n                    </Form.Label>\r\n                    <Col sm={8}>\r\n                    <InputGroup>\r\n                        <InputGroup.Prepend>\r\n                            <InputGroup.Text>Length</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <Form.Control value={this.props.chamberlength} disabled />\r\n                        <InputGroup.Prepend>\r\n                            <InputGroup.Text>Heigth</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <Form.Control value={this.props.chamberheight} disabled/>\r\n                        <InputGroup.Prepend>\r\n                            <InputGroup.Text>Width</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <Form.Control value={this.props.chamberwidth} disabled />\r\n                    </InputGroup>  \r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row}>\r\n                    <Form.Label column sm={4}>\r\n                        Substrate Plate Size\r\n                    </Form.Label>\r\n                    <Col sm={8}>\r\n                        <InputGroup>\r\n                            <InputGroup.Prepend>\r\n                                <InputGroup.Text>Length</InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <Form.Control disabled placeholder=\"-\" value={this.props.substratelength}/>\r\n                            <InputGroup.Prepend>\r\n                                <InputGroup.Text>Width</InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <Form.Control disabled placeholder=\"-\" value={this.props.substratewidth}/>\r\n                        </InputGroup>\r\n                    </Col>\r\n                </Form.Group>\r\n                </Col>\r\n                <Col>\r\n                <Form.Group as={Row}>\r\n                    <Form.Label column sm={4}>\r\n                        Distance TCP-Nozzle\r\n                    </Form.Label>\r\n                    <Col sm={8}>\r\n                        <Form.Control disabled placeholder=\"-\" value={this.props.nozzledistance}/>\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row}>\r\n                    <Form.Label column sm={4}>\r\n                        Substrate Plate Coordinates\r\n                    </Form.Label>\r\n                    <Col sm={8}>\r\n                    <InputGroup>\r\n                            <InputGroup.Prepend>\r\n                                <InputGroup.Text>X</InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <Form.Control disabled placeholder=\"-\" value={this.props.substrateposx}/>\r\n                            <InputGroup.Prepend>\r\n                                <InputGroup.Text>Y</InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <Form.Control disabled placeholder=\"-\" value={this.props.substrateposy}/>\r\n                        </InputGroup>\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row}>\r\n                    <Form.Label column sm={4}>\r\n                        Reference Point Coordinates\r\n                    </Form.Label>\r\n                    <Col sm={8}>\r\n                    <InputGroup>\r\n                            <InputGroup.Prepend>\r\n                                <InputGroup.Text>X</InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <Form.Control disabled placeholder=\"-\" value={this.props.substrateposx}/>\r\n                            <InputGroup.Prepend>\r\n                                <InputGroup.Text>Y</InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <Form.Control disabled placeholder=\"-\" value={this.props.substrateposy}/>\r\n                        </InputGroup>\r\n                    </Col>\r\n                </Form.Group>\r\n            </Col>\r\n            </Row>\r\n            </Form>\r\n            \r\n            \r\n            \r\n            <br/>\r\n            <Navbar bg='light'>\r\n                <Navbar.Brand>Overview - Manufacturing Parameters</Navbar.Brand>\r\n                <Nav className=\"justify-content-end\" style={{ width: \"100%\"}}>\r\n                \r\n                </Nav>\r\n            </Navbar>\r\n            <br/>\r\n            <Form>\r\n            <Row>\r\n            <Col>\r\n                <Form.Group as={Row}>\r\n                    <Form.Label column sm={4}>\r\n                        Power\r\n                    </Form.Label>\r\n                    <Col sm={8}>\r\n                        <Form.Control placeholder=\"-\" disabled value = {`${this.props.power} Watt`} />\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row}>\r\n                    <Form.Label column sm={4}>\r\n                        Jet Diameter\r\n                    </Form.Label>\r\n                    <Col sm={8}>\r\n                        <Form.Control disabled placeholder=\"-\" value = {`${this.props.jetdiameter} mm`}/>\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row}>\r\n                    <Form.Label column sm={4}>\r\n                        Gas Flow\r\n                    </Form.Label>\r\n                    <Col sm={8}>\r\n                        <Form.Control disabled placeholder=\"-\" value = {`${this.props.gasflow} mm³/s`}/>\r\n                    </Col>\r\n                </Form.Group>\r\n                </Col>\r\n                <Col>\r\n                <Form.Group as={Row}>\r\n                    <Form.Label column sm={4}>\r\n                        Wirefeed\r\n                    </Form.Label>\r\n                    <Col sm={8}>\r\n                        <Form.Control disabled placeholder=\"-\" value = {`${this.props.wirefeed} mm/s`} />\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row}>\r\n                    <Form.Label column sm={4}>\r\n                        Print Head Speed\r\n                    </Form.Label>\r\n                    <Col sm={8}>\r\n                        <Form.Control disabled placeholder=\"-\" value = {`${this.props.printheadspeed} mm/s`}/>\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row}>\r\n                    <Form.Label column sm={4}>\r\n                        Nozzle Distance\r\n                    </Form.Label>\r\n                    <Col sm={8}>\r\n                        <Form.Control placeholder=\"-\" disabled value = {`${this.props.nozzledistance} mm`}/>\r\n                    </Col>\r\n                </Form.Group>\r\n            </Col>\r\n            </Row>\r\n            </Form>\r\n            \r\n            <br/>\r\n            <Row>\r\n            <Col>    \r\n            \r\n            <Navbar bg='light'>\r\n                <Navbar.Brand>Time Delay for Starting Procedure</Navbar.Brand>\r\n            </Navbar>\r\n            <br/>\r\n            <Form>\r\n                <Form.Group as={Row}>\r\n                    <Form.Label column sm={2}>\r\n                        Wirefeed\r\n                    </Form.Label>\r\n                    <Col sm={10}>\r\n                        <Form.Control \r\n                            type=\"number\" \r\n                            placeholder=\"ms\" \r\n                            onChange = {(e) => this.props.onChange(e, \"wiredelay\")}\r\n                            onBlur = {(e) => this.props.onBlurDelay(e)}\r\n                            onClick = {(e) => this.props.onClickdelete(e, \"wiredelay\")}\r\n                            value = {this.props.wiredelay}\r\n                            />\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row}>\r\n                    <Form.Label column sm={2}>\r\n                        Plasmabeam\r\n                    </Form.Label>\r\n                    <Col sm={10}>\r\n                        <Form.Control \r\n                            type=\"number\" \r\n                            placeholder=\"in ms\"\r\n                            onChange = {(e) => this.props.onChange(e, \"plasmadelay\")}\r\n                            onBlur = {(e) => this.props.onBlurDelay(e)}\r\n                            onClick = {(e) => this.props.onClickdelete(e, \"plasmadelay\")}\r\n                            value = {this.props.plasmadelay}\r\n                            />\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row}>\r\n                    <Form.Label column sm={2}>\r\n                        XYZ-Tisch\r\n                    </Form.Label>\r\n                    <Col sm={10}>\r\n                        <Form.Control \r\n                            type=\"number\" \r\n                            placeholder=\"in ms\"\r\n                            onChange = {(e) => this.props.onChange(e, \"xyzdelay\")}\r\n                            onBlur = {(e) => this.props.onBlurDelay(e)}\r\n                            onClick = {(e) => this.props.onClickdelete(e, \"xyzdelay\")}\r\n                            value = {this.props.xyzdelay}\r\n                            />\r\n                    </Col>\r\n                </Form.Group>\r\n            </Form>\r\n            <Button\r\n                style = {{\r\n                    width: \"180px\",\r\n                    float: \"left\",\r\n                    marginLeft: \"50px\",\r\n                    marginBottom: \"20px\",\r\n                    backgroundColor: \"#00AB84\",\r\n                    borderColor: \"#00AB84\"\r\n                }}\r\n                onClick = {this.props.sendTimeDelay}\r\n                >\r\n                Send\r\n            </Button>\r\n            {this.props.delayvaluescheck &&<Image \r\n                src = {check}\r\n                style = {{\r\n                    height: 40,\r\n                    width: 40,\r\n                    float: \"left\",\r\n                    marginLeft: \"20px\"\r\n                }}\r\n                />}\r\n            <br/>\r\n            </Col>\r\n            <Col>\r\n            <Navbar bg='light'>\r\n                <Navbar.Brand>Build Procedure</Navbar.Brand>\r\n            </Navbar>\r\n            <br/>\r\n            <Button\r\n                block \r\n                size = \"lg\"\r\n                variant = \"secondary\"\r\n                onClick = {this.props.readifyPrint}\r\n                disabled = {this.props.startstoppausecheck}\r\n                >\r\n                    Move Printhead to Reference Point and Set Limits of Substrateplate\r\n                    </Button>\r\n            <Button \r\n                block size='lg' \r\n                style = {{\r\n                    backgroundColor: \"#00AB84\",\r\n                    borderColor: \"#00AB84\"\r\n                }}\r\n                //disabled = {this.props.startbutton}\r\n                onClick = {this.props.startPrinting}\r\n                \r\n                >Start</Button>\r\n            <Button \r\n                block size='lg' \r\n                variant='danger'\r\n                //disabled = {this.props.startstoppausecheck}\r\n                onClick = {this.props.stopPrint}\r\n\r\n                >Stop</Button>\r\n            <br/>\r\n            </Col>\r\n\r\n\r\n            </Row>  \r\n            <Navbar bg='light'>\r\n                <Navbar.Brand>Console Log</Navbar.Brand>    \r\n            </Navbar>\r\n\r\n            <ProgressBar \r\n                now={this.props.progress}\r\n                label = {`${this.props.progress}%`}\r\n                style = {{\r\n                    marginTop: \"10px\",\r\n                    marginLeft: \"20px\",\r\n                    marginRight: \"20px\",\r\n                    height: \"50px\",\r\n                    fontSize: \"25px\"\r\n                }}\r\n                />\r\n            <br/>\r\n            <FormGroup>\r\n                <Form.Control as=\"textarea\" rows=\"12\" disabled value = {this.props.linecontent}>{this.props.consolelog}</Form.Control>\r\n            </FormGroup>\r\n            <Button\r\n                block\r\n                size = \"lg\"\r\n                variant=\"secondary\"\r\n                onClick = {this.props.resetAll}>\r\n                    Reset All\r\n                </Button>\r\n            <Navbar bg='light' style={{paddingBottom: '60px'}}>\r\n\r\n            </Navbar>\r\n\r\n            \r\n\r\n                            \r\n            \r\n\r\n        \r\n         </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { Navbar, Image, Row, Col } from \"react-bootstrap\";\r\nimport FHG from './svg/fhg_logo.svg'\r\nimport FHA from './svg/fh_aachen.svg'\r\n\r\nexport default class Setup extends React.Component {\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            <Navbar \r\n                bg=\"light\"\r\n                style = {{\r\n                    paddingTop:\"50px\",\r\n                    \r\n                }}/>\r\n            <Row>\r\n                <Col>\r\n                \r\n            <Image\r\n                src = {FHG}\r\n                style = {{\r\n                    marginTop:\"100px\"\r\n                }}\r\n                />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n            <Col>\r\n            <Image\r\n                src={FHA}\r\n                style = {{\r\n                    marginTop: \"100px\",\r\n                    width: \"800px\"\r\n                }}\r\n                />\r\n                </Col>\r\n            </Row>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport Setup from './Setup.js';\r\nimport Mparm from './ManufacturingParameters'\r\nimport Build from './Build'\r\nimport Start from './Start.js'\r\nimport { BrowserRouter as Route, Switch, Redirect } from 'react-router-dom';\r\n\r\n\r\nexport default class Route1 extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n\r\n\r\n        <Switch>\r\n            <Redirect exact from=\"/\" to=\"/start\"/>\r\n            <Route path=\"/start\">\r\n            <Start/>\r\n            \r\n            </Route>   \r\n            <Route path=\"/setup\">\r\n                <Setup \r\n                //FUNCTIONS\r\n                    onClickdelete = {this.props.onClickdelete} \r\n                    onBlur={this.props.onBlur} \r\n                    onChangeChamber={this.props.onChangeChamber} \r\n                    onChange={this.props.onChange} \r\n                    setText={this.props.setText}\r\n                    dropdownClick = {this.props.dropdownClick}\r\n                    dropdownClickfalse = {this.props.dropdownClickfalse}\r\n                    showPreview={this.props.showPreview}\r\n                    showpreview={this.props.showpreview}\r\n                    checkInputs = {this.props.checkInputs}\r\n                    setChamberValue={this.props.setChamberValue} \r\n                    sendSetupValues = {this.props.sendSetupValues}\r\n                    sendSetupValues2 = {this.props.sendSetupValues2}\r\n                    movenozzleXplus = {this.props.movenozzleXplus}\r\n                    movenozzleXminus = {this.props.movenozzleXminus}\r\n                    movenozzleYplus = {this.props.movenozzleYplus}\r\n                    movenozzleYminus = {this.props.movenozzleYminus}\r\n                    movenozzleZplus = {this.props.movenozzleZplus}\r\n                    movenozzleZminus = {this.props.movenozzleZminus}\r\n                    setStepSize = {this.props.setStepSize}\r\n                    setPosmanualsubstrate = {this.props.setPosmanualsubstrate}\r\n                    setPosmanualrppos = {this.props.setPosmanualrppos}\r\n                    onClickdeletePos = {this.props.onClickdeletePos}\r\n                    columnsizetext = {this.props.columnsizetext}\r\n                    columnsizeinput = {this.props.columnsizeinput}\r\n                    columnsizeform = {this.props.columnsizeform}\r\n                    columnsizeimage = {this.props.columnsizeimage}\r\n                    \r\n                //STATES\r\n                    //states with V at the end are for formvalidation and change of background color of field\r\n                    toollength = {this.props.toollength}\r\n                    toollengthV = {this.props.toollengthV} \r\n                    toolheight = {this.props.toolheight}\r\n                    toolheightV = {this.props.toolheightV} \r\n                    toolwidth = {this.props.toolwidth}\r\n                    toolwidthV = {this.props.toolwidthV}\r\n                    chamberlength = {this.props.chamberlength} \r\n                    chamberheight = {this.props.chamberheight}\r\n                    chamberheightV = {this.props.chamberheightV} \r\n                    chamberwidth = {this.props.chamberwidth}\r\n                    substratelength = {this.props.substratelength}\r\n                    substratelengthV = {this.props.substratelengthV} \r\n                    substrateheight = {this.props.substrateheight}\r\n                    substrateheightV = {this.props.substrateheightV} \r\n                    substratewidth = {this.props.substratewidth}\r\n                    substratewidthV = {this.props.substratewidthV}\r\n                    nozzledistance = {this.props.nozzledistance}\r\n                    nozzledistanceV = {this.props.nozzledistanceV} \r\n                    substrateposx = {this.props.substrateposx}\r\n                    substrateposxV = {this.props.substrateposxV} \r\n                    substrateposy = {this.props.substrateposy}\r\n                    substrateposyV = {this.props.substrateposyV}\r\n                    rpposx = {this.props.rpposx} \r\n                    rpposxV = {this.props.rpposxV}\r\n                    rpposy = {this.props.rpposy}\r\n                    rpposyV = {this.props.rpposyV}\r\n                    submitbutton = {this.props.submitbutton}\r\n                    previewbutton = {this.props.previewbutton}\r\n                    onBlurPos = {this.props.onBlurPos}\r\n                    checkPreview = {this.props.checkPreview}\r\n                    setupvalues1check = {this.props.setupvalues1check}\r\n                    setupvalues2check = {this.props.setupvalues2check}\r\n                    dangershow = {this.props.dangershow}\r\n                    dropdowntitle = {this.props.dropdowntitle}\r\n                    dangerbutton = {this.props.dangerbutton}\r\n                    printheadpos = {this.props.printheadpos}\r\n                    stepsize = {this.props.stepsize}\r\n                    showgraphicalrepresentation = {this.props.showgraphicalrepresentation}\r\n                    setup2activate = {this.props.setup2activate}\r\n                    />\r\n                    \r\n            </Route>\r\n            <Route path=\"/mp\">\r\n                <Mparm \r\n                //FUNCTIONS\r\n                    onClickdelete = {this.props.onClickdelete}\r\n                    onChange = {this.props.onChange}\r\n                    onBlurMparm = {this.props.onBlurMparm} \r\n                    createGcode = {this.props.createGcode}\r\n                    deleteGcode = {this.props.deleteGcode}\r\n                    editGcode = {this.props.editGcode}\r\n                    onChangeGcode = {this.props.onChangeGcode}\r\n                    onBlurGcode = {this.props.onBlurGcode}\r\n                    sendMparmValues = {this.props.sendMparmValues}\r\n                    movenozzleXplus = {this.props.movenozzleXplus}\r\n                    movenozzleXminus = {this.props.movenozzleXminus}\r\n                    movenozzleYplus = {this.props.movenozzleYplus}\r\n                    movenozzleYminus = {this.props.movenozzleYminus}\r\n                    movenozzleZplus = {this.props.movenozzleZplus}\r\n                    movenozzleZminus = {this.props.movenozzleZminus}\r\n                    fileInput = {this.props.fileInput}\r\n                    setStepSize = {this.props.setStepSize}\r\n                    returnHome = {this.props.returnHome}\r\n                    setSpeed = {this.props.setSpeed}\r\n                    repairPos = {this.props.repairPos}\r\n                    manualCoords = {this.props.manualCoords}\r\n                    sendInvcommand = {this.props.sendInvcommand}\r\n                    startTranslate = {this.props.startTranslate}\r\n                    openGcode = {this.props.openGcode}\r\n                    verifyGcode = {this.props.verifyGcode}\r\n                    fileSelectionNameOnChange = {this.props.fileSelectionNameOnChange}\r\n                    uploadfilenameApp = {this.props.uploadfilenameApp}\r\n                    fileUpload = {this.props.fileUpload}\r\n                    uploadbutton = {this.props.uploadbutton}\r\n                    dropdownWirefeed = {this.props.dropdownWirefeed}\r\n\r\n\r\n                //STATES\r\n                    //states with V at the end are for formvalidation and change of background color of field\r\n                    power = {this.props.power}\r\n                    powerV = {this.props.powerV} \r\n                    jetdiameter = {this.props.jetdiameter}\r\n                    jetdiameterV = {this.props.jetdiameterV} \r\n                    gasflow = {this.props.gasflow} \r\n                    gasflowV = {this.props.gasflowV}\r\n                    wirefeed = {this.props.wirefeed}\r\n                    wirefeedV = {this.props.wirefeedV} \r\n                    printheadspeed = {this.props.printheadspeed}\r\n                    printheadspeedV = {this.props.printheadspeedV}\r\n                    nozzledistance = {this.props.nozzledistance}\r\n                    nozzledistanceV = {this.props.nozzledistanceV}\r\n                    expertmode = {this.props.expertmode}\r\n                    mparmsend = {this.props.mparmsend}\r\n                    gcode = {this.props.gcode}\r\n                    gcodex = {this.props.gcodex}\r\n                    gcodey = {this.props.gcodey}\r\n                    gcodez = {this.props.gcodez}\r\n                    gcodespeed = {this.props.gcodespeed}\r\n                    textarea = {this.props.textarea}\r\n                    filename = {this.props.filename}\r\n                    mparmvaluescheck = {this.props.mparmvaluescheck}\r\n                    stepsize = {this.props.stepsize}\r\n                    printheadpos = {this.props.printheadpos}\r\n                    setspeed = {this.props.setspeed}\r\n                    fieldx = {this.props.fieldx}\r\n                    fieldy = {this.props.fieldy}\r\n                    fieldz = {this.props.fieldz}\r\n                    invcommand = {this.props.invcommand}\r\n                    translated = {this.props.translated}\r\n                    gcodebuttons = {this.props.gcodebuttons}\r\n                    verifiedyes = {this.props.verifiedyes}\r\n                    verifiedno = {this.props.verifiedno}\r\n                    wirefeeddropdowntext = {this.props.wirefeeddropdowntext}\r\n                    wirefeedplaceholder = {this.props.wirefeedplaceholder}\r\n\r\n                   \r\n\r\n                    />\r\n            </Route>\r\n            <Route path=\"/build\">\r\n                <Build \r\n                //FUNCTIONS\r\n                    onChange = {this.props.onChange}\r\n                    onClickdelete = {this.props.onClickdelete}\r\n                    onBlurDelay = {this.props.onBlurDelay}\r\n                    sendTimeDelay = {this.props.sendTimeDelay}\r\n                    startPrinting = {this.props.startPrinting}\r\n                    stopReading = {this.props.stopReading}\r\n                    readifyPrint = {this.props.readifyPrint}\r\n                    stopPrint = {this.props.stopPrint}\r\n                    resetAll = {this.props.resetAll}\r\n                //STATES\r\n                    //states with V at the end are for formvalidation and change of background color of field\r\n                    toollength = {this.props.toollength}\r\n                    toolheight = {this.props.toolheight} \r\n                    toolwidth = {this.props.toolwidth}\r\n                    chamberlength = {this.props.chamberlength} \r\n                    chamberheight = {this.props.chamberheight} \r\n                    chamberwidth = {this.props.chamberwidth}\r\n                    substratelength = {this.props.substratelength} \r\n                    substrateheight = {this.props.substrateheight} \r\n                    substratewidth = {this.props.substratewidth}\r\n                    nozzledistance = {this.props.nozzledistance} \r\n                    substrateposx = {this.props.substrateposx} \r\n                    substrateposy = {this.props.substrateposy}\r\n                    rpposx = {this.props.rpposx} \r\n                    rpposy = {this.props.rpposy}\r\n                    power = {this.props.power} \r\n                    jetdiameter = {this.props.jetdiameter} \r\n                    gasflow = {this.props.gasflow} \r\n                    wirefeed = {this.props.wirefeed} \r\n                    printheadspeed = {this.props.printheadspeed} \r\n                    wiredelay = {this.props.wiredelay} \r\n                    plasmadelay = {this.props.plasmadelay} \r\n                    xyzdelay = {this.props.xyzdelay}\r\n                    delayvaluescheck = {this.props.delayvaluescheck}\r\n                    startstoppausecheck = {this.props.startstoppausecheck}\r\n                    consolelog = {this.props.consolelog}\r\n                    startbutton = {this.props.startbutton}\r\n                    progress = {this.props.progress}\r\n                    linecontent = {this.props.linecontent}\r\n                    /> \r\n            </Route>\r\n        </Switch>\r\n        )\r\n    }\r\n}   ","import React from 'react';\r\nimport './App.css';\r\nimport Nbar from './Nbar.js';\r\nimport Route1 from './Route';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\n\r\nvar loop1 = null,\r\n    linenumber = 1,\r\n    linecount = 0\r\n\r\nclass App extends React.Component {\r\n  constructor(){\r\n    super()\r\n    this.onChange = this.onChange.bind(this)\r\n    this.onBlur = this.onBlur.bind(this)\r\n    this.onClickdelete = this.onClickdelete.bind(this)\r\n    this.checkInputs = this.checkInputs.bind(this)\r\n    this.showPreview = this.showPreview.bind(this)\r\n    this.onBlurPos = this.onBlurPos.bind(this)\r\n    this.checkPreview = this.checkPreview.bind(this)\r\n    this.state = {\r\n      toollength: \"\",\r\n      toollengthV: \"\",\r\n      toolheight: \"\",\r\n      toolheightV: \"\",\r\n      toolwidth: \"\",\r\n      toolwidthV: \"\",\r\n      chamberlength: \"\",\r\n      chamberheight: \"\",\r\n      chamberwidth: \"\",\r\n      substratelength: \"\",\r\n      substratelengthV: \"\",\r\n      substrateheight: \"\",\r\n      substrateheightV:\"\",\r\n      substratewidth: \"\",\r\n      substratewidthV:\"\",\r\n      //refers to the working distance in Setu Up Values and Manufacturing Parameters.\r\n      nozzledistance: \"\",\r\n      nozzledistanceV:\"\",\r\n      substrateposx: \"\",\r\n      substrateposxV:\"\",\r\n      substrateposxG: \"\",\r\n      substrateposy: \"\",\r\n      substrateposyV: \"\",\r\n      substrateposyG: \"\",\r\n      rpposx:\"\",\r\n      rpposxV:\"\",\r\n      rpposy: \"\",\r\n      rpposyV:\"\",\r\n      power: \"\",\r\n      powerV:\"\",\r\n      jetdiameter: \"\",\r\n      jetdiameterV:\"\",\r\n      gasflow: \"\",\r\n      gasflowV:\"\",\r\n      wirefeed: \"\",\r\n      wirefeedV:\"\",\r\n      printheadspeed: \"\",\r\n      printheadspeedV:\"\",\r\n      wiredelay: \"\",\r\n      wiredelayV:\"\",\r\n      plasmadelay: \"\",\r\n      plasmadelayV:\"\",\r\n      xyzdelay: \"\",\r\n      xyzdelayV:\"\",\r\n      submitbutton: true,\r\n      showpreview: false,\r\n      previewbutton: true,\r\n      expertmode: false,\r\n      mparmsend: true,\r\n      gcode:\"\",\r\n      gcodex:\"\",\r\n      gcodey:\"\",\r\n      gcodez:\"\",\r\n      gcodespeed:\"\",\r\n      textarea: true,\r\n      possend: true,\r\n      selectedFile: null,\r\n      imageURL: \"\",\r\n      setupvalues1check: false,\r\n      setupvalues1checkserver: false,\r\n      setupvalues2check: false,\r\n      mparmvaluescheck: false,\r\n      delayvaluescheck: false,\r\n      startstoppausecheck: true,\r\n      stepsize: 5,\r\n      setspeed: 10,\r\n      fileInfo: null,\r\n      printheadpos: \"Nozzle Position: X: 0 Y: 0 Z: 0\",\r\n      fieldx: \"\",\r\n      fieldy: \"\",\r\n      fieldz: \"\",\r\n      invcommand: \"\",\r\n      upperborderx: \"\",\r\n      upperbordery:\"\",\r\n      upperborderz:\"\",\r\n      translated: false,\r\n      gcodebuttons: true,\r\n      verifiedyes: false,\r\n      verifiedno: false,\r\n      dangerbutton: false,\r\n      dangershow: true,\r\n      dropdowntitle: \"Choose Profile\",\r\n      uploadfilenameApp:\"Click to choose file.\",\r\n      uploadbutton: false,\r\n      passwordshow: false,\r\n      password: \"\",\r\n      passwordnotcorrect: false,\r\n      passwordbordercolor: \"\",\r\n      showgraphicalrepresentation: false,\r\n      columnsizetext:\"5\",\r\n      columnsizeinput:\"7\",\r\n      columnsizeform:\"5\",\r\n      columnsizeimage:\"5\",\r\n      consolelog: \"\",\r\n      startreading: false,\r\n      startbutton: true,\r\n      progress: 0,\r\n      progressloop: true,\r\n      wirefeeddropdowntext: \"Wirefeed Set Value\",\r\n      wirefeedplaceholder: \"mm/s\",\r\n      wirefeedoption:\"c\",\r\n      linecontent: \"\",\r\n      linecontentcheck:\"\",\r\n      linecontentcheck2:\"\",\r\n      wirecheck1:\"\",\r\n      wirecheck2:\"\",\r\n      setup2activate: true,\r\n      verified: false\r\n\r\n\r\n\r\n    \r\n      \r\n    }\r\n    \r\n\r\n  }\r\n  render(){\r\n    return (\r\n      <Router>\r\n\r\n        <div className=\"App\">\r\n          <Nbar\r\n            passwordClose = {this.passwordClose}\r\n            setColumnsize = {this.setColumnsize}\r\n            onChange = {this.onChange}\r\n            passwordCheck = {this.passwordCheck}\r\n            passwordOnClick = {this.passwordOnClick}\r\n            password = {this.state.password}\r\n            passwordbordercolor = {this.state.passwordbordercolor}\r\n            expertmodeClick = {this.expertmodeClick}\r\n            printheadpos = {this.state.printheadpos}\r\n            dangerbutton = {this.state.dangerbutton}\r\n            passwordshow = {this.state.passwordshow}\r\n            expertmode = {this.state.expertmode}\r\n            passwordnotcorrect = {this.state.passwordnotcorrect}\r\n            />\r\n          \r\n        <div>\r\n          <Route1 \r\n          //FUNCTIONS\r\n            onClickdelete = {this.onClickdelete}\r\n            onClickdeletePos = {this.onClickdeletePos} \r\n            onBlur={this.onBlur} \r\n            onChange={this.onChange}\r\n            onChangeGcode = {this.onChangeGcode}\r\n            onChangeGcodeFile = {this.onChangeGcodeFile}\r\n            onBlurGcode = {this.onBlurGcode}\r\n            onBlurPos = {this.onBlurPos} \r\n            onBlurMparm = {this.onBlurMparm}\r\n            onBlurDelay = {this.onBlurDelay}\r\n            showPreview = {this.showPreview}\r\n            checkInputs = {this.checkInputs}\r\n            checkValue = {this.checkValue} \r\n            createGcode = {this.createGcode}\r\n            deleteGcode = {this.deleteGcode}\r\n            editGcode = {this.editGcode}\r\n            dropdownClick = {this.dropdownClick}\r\n            dropdownClickfalse = {this.dropdownClickfalse}\r\n            setTextVariable={this.setTextVariable} \r\n            sendSetupValues = {this.sendSetupValues}\r\n            sendSetupValues2 = {this.sendSetupValues2}\r\n            sendMparmValues = {this.sendMparmValues}\r\n            sendTimeDelay = {this.sendTimeDelay}\r\n            uploadInput = {this.uploadInput}\r\n            movenozzleXplus = {this.movenozzleXplus}\r\n            movenozzleXminus = {this.movenozzleXminus}\r\n            movenozzleYplus = {this.movenozzleYplus}\r\n            movenozzleYminus = {this.movenozzleYminus}\r\n            movenozzleZplus = {this.movenozzleZplus}\r\n            movenozzleZminus = {this.movenozzleZminus}\r\n            setStepSize = {this.setStepSize}\r\n            returnHome = {this.returnHome}\r\n            setSpeed = {this.setSpeed}\r\n            repairPos = {this.repairPos}\r\n            manualCoords = {this.manualCoords}\r\n            sendInvcommand = {this.sendInvcommand}\r\n            startTranslate = {this.startTranslate}\r\n            openGcode = {this.openGcode}\r\n            verifyGcode = {this.verifyGcode}\r\n            setPosmanualsubstrate = {this.setPosmanualsubstrate}\r\n            setPosmanualrppos = {this.setPosmanualrppos}\r\n            fileSelectionNameOnChange = {this.fileSelectionNameOnChange}\r\n            fileUpload = {this.fileUpload}\r\n            startPrinting = {this.startPrinting}\r\n            readifyPrint = {this.readifyPrint}\r\n            stopPrint = {this.stopPrint}\r\n            dropdownWirefeed = {this.dropdownWirefeed}\r\n            resetAll = {this.resetAll}\r\n            activateTCP = {this.activateTCP}\r\n            closeTCP = {this.closeTCP}\r\n            \r\n\r\n            //STATES\r\n            toollength = {this.state.toollength} \r\n            toollengthV = {this.state.toollengthV} \r\n            toolheight = {this.state.toolheight} \r\n            toolheightV = {this.state.toolheightV}\r\n            toolwidth = {this.state.toolwidth} \r\n            toolwidthV = {this.state.toolwidthV} \r\n            chamberlength = {this.state.chamberlength} \r\n            chamberheight = {this.state.chamberheight}\r\n            chamberheightV = {this.state.chamberheightV} \r\n            chamberwidth = {this.state.chamberwidth}\r\n            substratelength = {this.state.substratelength} \r\n            substratelengthV = {this.state.substratelengthV} \r\n            substrateheight = {this.state.substrateheight} \r\n            substrateheightV = {this.state.substrateheightV}\r\n            substratewidth = {this.state.substratewidth} \r\n            substratewidthV = {this.state.substratewidthV}\r\n            nozzledistance = {this.state.nozzledistance} \r\n            nozzledistanceV = {this.state.nozzledistanceV}\r\n            substrateposx = {this.state.substrateposx} \r\n            substrateposxV = {this.state.substrateposxV}\r\n            substrateposxG = {this.state.substrateposxG}\r\n            substrateposy = {this.state.substrateposy} \r\n            substrateposyV = {this.state.substrateposyV}\r\n            substrateposyG = {this.state.substrateposyG} \r\n            rpposx = {this.state.rpposx} \r\n            rpposxV = {this.state.rpposxV}\r\n            rpposy = {this.state.rpposy} \r\n            rpposyV = {this.state.rpposyV}\r\n            power = {this.state.power} \r\n            powerV = {this.state.powerV}\r\n            jetdiameter = {this.state.jetdiameter} \r\n            jetdiameterV = {this.state.jetdiameterV}\r\n            gasflow = {this.state.gasflow} \r\n            gasflowV = {this.state.gasflowV}\r\n            wirefeed = {this.state.wirefeed} \r\n            wirefeedV = {this.state.wirefeedV}\r\n            printheadspeed = {this.state.printheadspeed} \r\n            printheadspeedV = {this.state.printheadspeedV}\r\n            wiredelay = {this.state.wiredelay} \r\n            wiredelayV = {this.state.wiredelayV}\r\n            plasmadelay = {this.state.plasmadelay} \r\n            plasmadelayV = {this.state.plasmadelayV}\r\n            xyzdelay = {this.state.xyzdelay} \r\n            xyzdelayV = {this.state.xyzdelayV}\r\n            submitbutton = {this.state.submitbutton}\r\n            showpreview = {this.state.showpreview}\r\n            previewbutton = {this.state.previewbutton}\r\n            expertmode = {this.state.expertmode}\r\n            mparmsend = {this.state.mparmsend}\r\n            gcode = {this.state.gcode}\r\n            gcodex = {this.state.gcodex}\r\n            gcodey = {this.state.gcodey}\r\n            gcodez = {this.state.gcodez}\r\n            gcodespeed = {this.state.gcodespeed}\r\n            textarea = {this.state.textarea}\r\n            possend = {this.state.possend}\r\n            filename = {this.state.filename}\r\n            setupvalues1check = {this.state.setupvalues1check}\r\n            setupvalues2check = {this.state.setupvalues2check}\r\n            mparmvaluescheck = {this.state.mparmvaluescheck}\r\n            delayvaluescheck = {this.state.delayvaluescheck}\r\n            startstoppausecheck = {this.state.startstoppausecheck}\r\n            stepsize = {this.state.stepsize}\r\n            setspeed = {this.state.setspeed}\r\n            printheadpos = {this.state.printheadpos}\r\n            fieldx = {this.state.fieldx}\r\n            fieldy = {this.state.fieldy}\r\n            fieldz = {this.state.fieldz}\r\n            invcommand = {this.state.invcommand}\r\n            upperborderx = {this.state.upperborderx}\r\n            upperbordery = {this.state.upperborderx}\r\n            upperborderz = {this.state.upperborderz}\r\n            translated = {this.state.translated}\r\n            gcodebuttons = {this.state.gcodebuttons}\r\n            verifiedyes = {this.state.verifiedyes}\r\n            verifiedno = {this.state.verifiedno}\r\n            dangershow = {this.state.dangershow}\r\n            dropdowntitle = {this.state.dropdowntitle}\r\n            dangerbutton = {this.state.dangerbutton}\r\n            uploadfilenameApp = {this.state.uploadfilenameApp}\r\n            uploadbutton = {this.state.uploadbutton}\r\n            showgraphicalrepresentation = {this.state.showgraphicalrepresentation}\r\n            columnsizetext = {this.state.columnsizetext}\r\n            columnsizeinput = {this.state.columnsizeinput}\r\n            columnsizeform = {this.state.columnsizeform}\r\n            columnsizeimage = {this.state.columnsizeimage}\r\n            consolelog = {this.state.consolelog}\r\n            startbutton = {this.state.startbutton}\r\n            progress = {this.state.progress}\r\n            wirefeeddropdowntext = {this.state.wirefeeddropdowntext}\r\n            wirefeedplaceholder = {this.state.wirefeedplaceholder}\r\n            linecontent = {this.state.linecontent}\r\n            setup2activate = {this.state.setup2activate}\r\n\r\n            \r\n            /> \r\n        </div>\r\n        </div>\r\n      </Router>\r\n      \r\n        );\r\n    }\r\n//----------------------------------------------------------------------------------------------------------------------------------------------------------------------//  \r\n\r\n\r\n// State management of input fields\r\n  \r\n  //Managing of columnsizes for different Screen Setups (4:3, 16:9)\r\n  setColumnsize = (a,b,c,d) => {\r\n    this.setState({\r\n      columnsizetext: a,\r\n      columnsizeinput: b,\r\n      columnsizeform: c,\r\n      columnsizeimage: d\r\n    })\r\n\r\n  }\r\n  \r\n  //OnBlur function for checking inputs of the upper setup values. If the entered numbers are not within the defined area, the input field will be colored red.\r\n  onBlur(e, low, high, name, nameV){\r\n    const b = e.currentTarget.value\r\n\r\n    \r\n    if (b > high){\r\n      this.setState({[nameV]: \"rgba(255,0,0, 0.1)\"}, function() {this.checkInputs(e)})\r\n      this.setState({[name]: \"Value must be lower!\"}, function() {this.checkInputs(e)})\r\n      \r\n    }\r\n    \r\n    if (b < low){\r\n      this.setState({[nameV]: \"rgba(255,0,0, 0.1)\"}, function() {this.checkInputs(e)})\r\n      this.setState({[name]: \"Value must be higher!\"}, function() {this.checkInputs(e)})\r\n    }\r\n    if (low <= b && b <= high){\r\n      this.setState({[nameV]:\"\"}, function () {this.checkInputs(e)})\r\n    }\r\n    this.setState({\r\n      setupvalues1check: false,\r\n \r\n    }, function() {this.startbuildCheck()})\r\n  }\r\n//onBlur function for the inputcheck of substrateplate position and referencepoint position \r\n  onBlurPos(e, low, high, name, nameV){\r\n    const b = e.currentTarget.value\r\n\r\n    \r\n    if (b > high){\r\n      this.setState({[nameV]: \"rgba(255,0,0, 0.1)\"}, function() {this.checkPreview(e)})\r\n      this.setState({[name]: \"Value must be lower!\"}, function() {this.checkPreview(e)})\r\n      this.setState({showpreview: false})\r\n      \r\n    }\r\n    \r\n    if (b < low){\r\n      this.setState({[nameV]: \"rgba(255,0,0, 0.1)\"}, function() {this.checkPreview(e)})\r\n      this.setState({[name]: \"Value must be higher!\"}, function() {this.checkPreview(e)})\r\n      this.setState({showpreview: false})\r\n    }\r\n    if (low <= b && b <= high){\r\n      this.setState({[nameV]:\"\"}, function () {this.checkPreview(e)})\r\n    }\r\n    this.setState({\r\n      setupvalues2check: false,\r\n    }, function() {this.startbuildCheck()})\r\n  }\r\n\r\n  onBlurMparm = (e, low, high, name, nameV) => {\r\n    const b = e.currentTarget.value\r\n    \r\n    if (b > high){\r\n      this.setState({[nameV]: \"rgba(255,0,0, 0.1)\"}, function() {this.checkMparm(e)})\r\n      this.setState({[name]: \"Value must be lower!\"}, function() {this.checkMparm(e)})\r\n      this.setState({showpreview: false})\r\n      \r\n    }\r\n    \r\n    if (b < low){\r\n      this.setState({[nameV]: \"rgba(255,0,0, 0.1)\"}, function() {this.checkMparm(e)})\r\n      this.setState({[name]: \"Value must be higher!\"}, function() {this.checkMparm(e)})\r\n      this.setState({showpreview: false})\r\n    }\r\n    if (low <= b && b <= high){\r\n      this.setState({[nameV]:\"\"}, function () {this.checkMparm(e)})\r\n    }\r\n    this.setState({\r\n      mparmvaluescheck: false\r\n    }, function() {this.startbuildCheck()})\r\n  }\r\n  \r\n  onBlurDelay = () => {\r\n    this.setState({\r\n      delayvaluescheck: false,\r\n    }, function() {this.startbuildCheck()})\r\n  }\r\n\r\n  onClickdelete(e, a){\r\n    this.setState({[a]: \"\"})\r\n    console.log(\"deleted it\")\r\n  }\r\n\r\n  onClickdeletePos = (e,a) => {\r\n    this.setState({\r\n      [a]: \"\",\r\n      showpreview: false,\r\n    })\r\n\r\n  }\r\n  onChange(e,f){\r\n    this.setState({[f]: e.target.value})\r\n\r\n    \r\n  }\r\n  checkState = () => {\r\n    const { substratewidth } = this.state;\r\n    console.log(substratewidth)\r\n  }\r\n\r\n  //Checks if every input field is correctly filed from Tool length to Nozzle Distance\r\n  checkInputs(e) {\r\n    if (this.state.toollengthV === \"\" && this.state.toolheightV === \"\" && this.state.toolwidthV === \"\" && this.state.substrateheightV ===\"\" && this.state.substratelengthV ===\"\" && this.state.substratewidthV ===\"\" && this.state.nozzledistanceV === \"\") {\r\n        this.setState({submitbutton: false})\r\n    }  \r\n    \r\n    if (this.state.toollength === \"\" || this.state.toolheight === \"\" || this.state.toolwidth === \"\" || this.state.substrateheight === \"\" || this.state.substratelength === \"\" || this.state.substratewidth === \"\" || this.state.nozzledistance === \"\") {\r\n      this.setState({submitbutton: true})\r\n    }\r\n\r\n    if (this.state.toollengthV !== \"\" || this.state.toolheightV !== \"\" || this.state.toolwidthV !== \"\" || this.state.substrateheightV !== \"\" || this.state.substratelengthV !== \"\" || this.state.substratewidthV !== \"\" || this.state.nozzledistanceV !== \"\" ) {\r\n        this.setState({submitbutton: true})\r\n      }\r\n  }\r\n\r\n  onClick = (e) => { \r\n    alert(\"it works\")\r\n    \r\n  }\r\n  //Checks if values can be previewed in a 2D graphic\r\n  checkPreview(e){\r\n    \r\n    if (this.state.substrateposxV===\"\" && this.state.substrateposyV===\"\" && this.state.rpposxV===\"\" && this.state.rpposyV===\"\"){\r\n      this.setState({previewbutton: false})\r\n    }\r\n    if (this.state.substrateposx === \"\" || this.state.substrateposy === \"\" || this.state.rpposy === \"\" || this.state.rpposx === \"\"){\r\n      this.setState({previewbutton: true})\r\n    }\r\n    if (this.state.substrateposxV !==\"\" || this.state.substrateposyV !==\"\" || this.state.rpposyV !== \"\" || this.state.rpposxV !== \"\"){\r\n      this.setState({previewbutton: true})\r\n    }\r\n    \r\n    \r\n  }\r\n\r\n  checkMparm = (e) => {\r\n    if (this.state.powerV===\"\" && this.state.jetdiameterV===\"\" && this.state.gasflowV===\"\" && this.state.wirefeedV===\"\" && this.state.printheadspeedV===\"\" && this.state.nozzledistanceV===\"\"){\r\n      this.setState({mparmsend: false})\r\n    }\r\n\r\n    if (this.state.power===\"\" || this.state.jetdiameter===\"\" || this.state.gasflow===\"\" || this.state.wirefeed===\"\" || this.state.printheadspeed===\"\" || this.state.nozzledistance===\"\"){\r\n      this.setState({mparmsend: true})\r\n    }\r\n\r\n    if (this.state.powerV !==\"\" || this.state.jetdiameterV !==\"\" || this.state.gasflowV !==\"\" || this.state.wirefeedV !==\"\" || this.state.printheadspeedV !==\"\" || this.state.nozzledistanceV !==\"\"){\r\n      this.setState({mparmsend: true})\r\n    }\r\n  }\r\n\r\n  createGcode = (e) => {\r\n    this.setState({gcode: this.state.gcode.concat(`${linenumber}. X${this.state.gcodex}, Y${this.state.gcodey}, Z${this.state.gcodez}, F${this.state.gcodespeed}\\n`)})\r\n    linenumber += 1 \r\n  }\r\n\r\n  deleteGcode = () => {\r\n    this.setState({gcode:\"\"})\r\n    linenumber = 1\r\n  }\r\n\r\n  editGcode = () => {\r\n    this.setState({textarea: false})\r\n    \r\n  }\r\n\r\n  onChangeGcode = (e) => {\r\n    \r\n    this.setState({gcode : e.currentTarget.value})\r\n\r\n  }\r\n\r\n\r\n  onBlurGcode = (e) => {\r\n    if (this.state.textarea === false)\r\n      this.setState({textarea: true})\r\n  }\r\n  showPreview(e) {\r\n \r\n   this.setState({\r\n     showpreview: true,\r\n     showgraphicalrepresentation: true\r\n    })\r\n   \r\n  }\r\n\r\n  dropdownClick = (e) => {\r\n\r\n    this.setState({\r\n      toollength: \"150\",\r\n      toolwidth: \"0\",\r\n      toolheight: \"100\",\r\n      substratelength: \"210\",\r\n      substratewidth: \"210\",\r\n      substrateheight: \"33\",\r\n      substrateposx: \"20\",\r\n      substrateposy: \"200\",\r\n      rpposx: \"20\",\r\n      rpposy: \"200\",\r\n      nozzledistance: \"20\",\r\n      submitbutton: false,\r\n      power: \"68\",\r\n      printheadspeed: \"53\",\r\n      jetdiameter: \"83\",\r\n      gasflow: \"69\",\r\n      wirefeed: \"98\",\r\n      mparmsend: false,\r\n      dropdowntitle: \"Standard\"\r\n\r\n\r\n\r\n    })\r\n  }\r\n\r\n\r\n\r\n\r\n  expertmodeClick = (e) => {\r\n\r\n    if (this.state.expertmode===false){\r\n      this.setState({passwordshow: true})\r\n    }\r\n    if (this.state.expertmode===true){\r\n      this.setState({\r\n        expertmode: false\r\n      })\r\n    }\r\n  }\r\n\r\n  passwordClose = () => {\r\n    this.setState({\r\n      passwordshow: false,\r\n      expertmode: false,\r\n      password: \"\",\r\n      passwordbordercolor: \"\",\r\n      passwordnotcorrect:\"\"\r\n    })\r\n  }\r\n  \r\n  passwordCheck = () => {\r\n    if (this.state.password === \"ipk\"){\r\n      this.setState({\r\n        expertmode: true,\r\n        passwordshow: false,\r\n        passwordnotcorrect: false,\r\n        passwordbordercolor: \"\",\r\n        password: \"\"\r\n      })\r\n    }\r\n    else{\r\n      this.setState({\r\n        passwordnotcorrect: true,\r\n        passwordbordercolor: \"red\"\r\n      })\r\n    }\r\n  }\r\n\r\n  passwordOnClick = () => {\r\n    this.setState({\r\n      passwordbordercolor:\"\",\r\n      passwordnotcorrect: false,\r\n      password: \"\",\r\n    })\r\n  }\r\n\r\n  startbuildCheck = () => {\r\n    if (this.state.setupvalues1check === true && this.state.setupvalues2check === true && this.state.mparmvaluescheck === true && this.state.delayvaluescheck === true && this.state.verified === true){\r\n      this.setState({\r\n        startstoppausecheck: false\r\n      })\r\n    }\r\n\r\n    if (this.state.setupvalues1check === false || this.state.setupvalues2check === false || this.state.mparmvaluescheck === false || this.state.delayvaluescheck === false){\r\n      this.setState({\r\n        startstoppausecheck: true\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n\r\n  setStepSize = (option) => {\r\n    if (option === \"a\"){\r\n      this.setState({\r\n        stepsize: 1\r\n      })\r\n    }\r\n\r\n    if (option === \"b\"){\r\n      this.setState({\r\n        stepsize: 5\r\n      })\r\n    }\r\n\r\n    if (option === \"c\"){\r\n      this.setState({\r\n        stepsize: 10\r\n      })\r\n    }\r\n\r\n    if (option === \"d\"){\r\n      this.setState({\r\n        stepsize: 50\r\n      })\r\n    }\r\n\r\n    if (option === \"e\"){\r\n      this.setState({\r\n        stepsize: 100\r\n      })\r\n    }\r\n  }\r\n\r\n  setSpeed = (option) => {\r\n    if (option === \"a\"){\r\n      this.setState({\r\n        setspeed: 10\r\n      }, function() {this.sendSpeed()})\r\n    }\r\n    if (option === \"b\"){\r\n      this.setState({\r\n        setspeed:20\r\n      }, function() {this.sendSpeed()})\r\n    }\r\n    if (option === \"c\"){\r\n      this.setState({\r\n        setspeed:50\r\n      }, function() {this.sendSpeed()}) \r\n    }\r\n  }\r\n\r\n  dropdownWirefeed = (option) => {\r\n    if (option === \"a\"){\r\n      this.setState({\r\n        wirefeeddropdowntext:\"Wirefeed Scaling Factor\",\r\n        wirefeedplaceholder:\"No Unit\",\r\n        wirefeedoption:\"a\"\r\n      })\r\n    }\r\n    if (option === \"b\"){\r\n      this.setState({\r\n        wirefeeddropdowntext:\"Wirefeed Overwrite Value\",\r\n        wirefeedplaceholder: \"mm/s\",\r\n        wirefeedoption:\"b\"\r\n      })\r\n    }\r\n\r\n    if (option === \"c\"){\r\n      this.setState({\r\n        wirefeeddrop: \"Wirefeed Set Value\",\r\n        wirefeedplaceholder: \"mm/s\",\r\n        wirefeedoption:\"c\"\r\n      })\r\n    }\r\n  }\r\n\r\n  \r\n\r\n  \r\n  \r\n// ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------//\r\n// Communication with Backend//\r\n  sendSetupValues = (e) => {\r\n\r\n    \r\n    const toolvalues = {\r\n      \"toollength\":this.state.toollength, \r\n      \"toolheight\":this.state.toolheight,\r\n      \"toolwidth\":this.state.toolwidth,\r\n      \"substratelength\": this.state.substratelength,\r\n      \"substratewidth\": this.state.substratewidth,\r\n      \"substrateheight\": this.state.substrateheight,\r\n      \"nozzledistance\": this.state.nozzledistance,\r\n    };\r\n\r\n    const headers = {\r\n      'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n    };\r\n\r\n    const init = {\r\n      method: 'post',\r\n      headers: headers,\r\n      mode: 'cors',\r\n      body: JSON.stringify(toolvalues)\r\n    };\r\n  \r\n  fetch('http://localhost:5000/setupvalues', init)\r\n    .then((response) => {\r\n      console.log(response)\r\n      return response.json()\r\n    })\r\n    .then((status) => {\r\n      console.log(status)\r\n      if (status === \"toohigh\"){\r\n        alert(\"Chosen Nozzledistance is too small for the given tool settings. The axis will go down as far as possible, but won't reach the desired distance.\")\r\n        this.setState({\r\n          dangerbutton: true\r\n        })\r\n      }\r\n      if (status === \"DANGER\"){\r\n        alert(\"DANGER! With these values the printhead would collide with objects in the machine chamber. Please choose different values.\")\r\n        this.setState({\r\n          dangershow: false,\r\n          dangerbutton: true,\r\n          chamberheightV:\"rgba(255,0,0, 0.1)\"\r\n        })\r\n      }\r\n      if (status === \"nocon\"){\r\n        alert(\"Values were transmitted to the server, but the machine is not connected.\")\r\n        this.setState({\r\n          chamberheightV: \"\",\r\n          dangershow: true,\r\n          dangerbutton: false,\r\n          setup2activate: false,\r\n          previewbutton: false,\r\n        })\r\n      }\r\n      if (status === \"done\"){\r\n        this.setState({\r\n          dangerbutton: false,\r\n          dangershow: true,\r\n          setupvalues1check: true,\r\n          chamberheightV:\"\",\r\n          setup2activate: false,\r\n          previewbutton: false\r\n        }, function() {this.startbuildCheck()})\r\n      }\r\n\r\n    })\r\n\r\n     .catch(function(error){\r\n      console.log(error)\r\n      alert(\"Parameters could not be transmitted. Please check if the server is running.\")\r\n     })\r\n};\r\n\r\n\r\n\r\n  sendSetupValues2 = () => {\r\n    const positionvalues = {\r\n      \"substrateposx\": this.state.substrateposx,\r\n      \"substrateposy\": this.state.substrateposy,\r\n      \"rpposx\": this.state.rpposx,\r\n      \"rpposy\": this.state.rpposy,\r\n    }\r\n    const headers = {\r\n      \"Accept\": \"application/json\",\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n\r\n    const init = {\r\n      method: \"post\",\r\n      headers: headers,\r\n      mode: \"cors\",\r\n      body: JSON.stringify(positionvalues)\r\n    }\r\n    \r\n    fetch('http://localhost:5000/setupvalues2', init)\r\n    .then((response) => {\r\n      console.log(response)\r\n      return response.json()\r\n    })\r\n    .then((msg) => {\r\n      if (msg === \"nocon\"){\r\n        alert(\"Values were transmitted to the server, but the machine is not connected.\")\r\n      }\r\n      if (msg === \"x_substrate_error\") {\r\n        alert(\"Part of the Substrateplate is not accessible for the Printhead on the X-Axis. Please Change Location or Size before you continue.\")\r\n      }\r\n      if (msg === \"y_substrate_error\") {\r\n        alert(\"Part of the Substrateplate is not accessible for the Printhead on the Y-Axis. Please Change Location or Size before you continue.\")\r\n      }\r\n      if (msg === \"z_substrate_error\") {\r\n        alert(\"Part of the Substrateplate is not accessible for the Printhead on the Z-Axis. Please Change Location or Size before you continue.\")\r\n      }\r\n      \r\n      if (msg === \"done\"){\r\n        this.setState({\r\n          setupvalues2check: true,\r\n        }, function() {this.startbuildCheck()})\r\n      }\r\n    })\r\n    .catch(function(error){\r\n      console.log(error)\r\n      alert(\"Parameters could not be transmitted. Please check if the server is running.\")\r\n    })\r\n  }\r\n  \r\n  sendMparmValues = () => {\r\n    const mparmvalues = {\r\n      \"power\": this.state.power,\r\n      \"jetdiameter\": this.state.jetdiameter,\r\n      \"gasflow\": this.state.gasflow,\r\n      \"wirefeed\": this.state.wirefeed,\r\n      \"printheadspeed\": this.state.printheadspeed,\r\n      \"nozzledistance\": this.state.nozzledistance,\r\n      \"wirefeedoption\": this.state.wirefeedoption,\r\n    }\r\n\r\n    const headers = {\r\n      \"Accept\": \"application/json\",\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n\r\n    const init = {\r\n      method: \"post\",\r\n      headers: headers,\r\n      mode: \"cors\",\r\n      body: JSON.stringify(mparmvalues)   \r\n    }\r\n\r\n    fetch('http://localhost:5000/mparmvalues', init)\r\n    .then((response) => {\r\n      console.log(response)\r\n      if (response.ok){\r\n        this.setState({\r\n          mparmvaluescheck: true\r\n        }, function() {this.startbuildCheck()})\r\n      }\r\n      return response.json()\r\n    })\r\n    .then((dudel) => {\r\n      console.log(dudel)\r\n    })\r\n    .catch(function(error){\r\n      console.log(error)\r\n      alert(\"Parameters could not be transmitted. Please check if the server is running.\")\r\n    }\r\n    )\r\n  }\r\n\r\n  sendTimeDelay = () => {\r\n    const delayvalues = {\r\n      \"wiredelay\": this.state.wiredelay,\r\n      \"plasmadelay\": this.state.plasmadelay,\r\n      \"xyzdelay\": this.state.xyzdelay\r\n    }\r\n    const headers = {\r\n      \"Accept\": \"application/json\",\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n\r\n    const init = {\r\n      method: \"post\",\r\n      headers: headers,\r\n      mode: \"cors\",\r\n      body: JSON.stringify(delayvalues)   \r\n    }\r\n\r\n    fetch('http://localhost:5000/delayvalues', init)\r\n    .then((response) => {\r\n      console.log(response)\r\n      if (response.ok === true){\r\n        this.setState({\r\n          delayvaluescheck: true\r\n\r\n        }, function() {this.startbuildCheck()})\r\n      }\r\n    })\r\n    .catch(function(error){\r\n      console.log(error)\r\n      alert(\"Parameters could not be transmitted. Please check if the server is running.\")\r\n    })\r\n    \r\n  }\r\n\r\n  movenozzleXplus = () => {\r\n\r\n    const stepsize = {\r\n      \"stepsize\": this.state.stepsize,\r\n    }\r\n\r\n    const headers = {\r\n      \"Accept\": \"application/json\",\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n\r\n    const init = {\r\n      method: \"post\",\r\n      headers: headers,\r\n      mode: \"cors\",\r\n      body: JSON.stringify(stepsize)\r\n        \r\n    }\r\n\r\n    fetch(\"http://localhost:5000/x+\", init)\r\n    .then((response) => {\r\n      console.log(response)\r\n      return response.json()\r\n    })\r\n    .then((flaskvalue) => {\r\n      console.log(flaskvalue)\r\n      if (flaskvalue === \"nocon\"){\r\n        console.log(flaskvalue)\r\n        alert(\"Command could not be transmitted. Please connect the machine via Serial Port.\")\r\n      }\r\n      if (flaskvalue !== \"nocon\"){\r\n      console.log(flaskvalue)\r\n      this.setState({\r\n        printheadpos: flaskvalue\r\n      })}\r\n    })\r\n      \r\n  }\r\n\r\n  movenozzleXminus = () => {\r\n\r\n    const stepsize = {\r\n      \"stepsize\": this.state.stepsize,\r\n    }\r\n    const headers = {\r\n      \"Accept\": \"application/json\",\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n\r\n    const init = {\r\n      method: \"post\",\r\n      headers: headers,\r\n      mode: \"cors\",\r\n      body: JSON.stringify(stepsize)\r\n        \r\n    }\r\n\r\n    fetch(\"http://localhost:5000/x- \", init)\r\n    .then((response) => {\r\n      console.log(response)\r\n      return response.json()\r\n    })\r\n    .then((flaskvalue) => {\r\n      console.log(flaskvalue)\r\n      if (flaskvalue === \"nocon\"){\r\n        console.log(flaskvalue)\r\n        alert(\"Command could not be transmitted. Please connect the machine via Serial Port.\")\r\n      }\r\n      if (flaskvalue !== \"nocon\"){\r\n      console.log(flaskvalue)\r\n      this.setState({\r\n        printheadpos: flaskvalue\r\n      })}\r\n    })\r\n  }\r\n\r\n  movenozzleYplus = () => {\r\n\r\n    const stepsize = {\r\n      \"stepsize\": this.state.stepsize,\r\n    }\r\n    const headers = {\r\n      \"Accept\": \"application/json\",\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n\r\n    const init = {\r\n      method: \"post\",\r\n      headers: headers,\r\n      mode: \"cors\",\r\n      body: JSON.stringify(stepsize)\r\n        \r\n    }\r\n\r\n    fetch(\"http://localhost:5000/y+\", init)\r\n    .then((response) => {\r\n      console.log(response)\r\n      return response.json()\r\n    })\r\n    .then((flaskvalue) => {\r\n      console.log(flaskvalue)\r\n      if (flaskvalue === \"nocon\"){\r\n        console.log(flaskvalue)\r\n        alert(\"Command could not be transmitted. Please connect the machine via Serial Port.\")\r\n      }\r\n      if (flaskvalue !== \"nocon\"){\r\n      console.log(flaskvalue)\r\n      this.setState({\r\n        printheadpos: flaskvalue\r\n      })}\r\n    })\r\n  }\r\n    \r\n    \r\n  \r\n\r\n  movenozzleYminus = () => {\r\n\r\n    const stepsize = {\r\n      \"stepsize\": this.state.stepsize,\r\n    }\r\n    const headers = {\r\n      \"Accept\": \"application/json\",\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n\r\n    const init = {\r\n      method: \"post\",\r\n      headers: headers,\r\n      mode: \"cors\",\r\n      body: JSON.stringify(stepsize)\r\n        \r\n    }\r\n\r\n    fetch(\"http://localhost:5000/y-\", init)\r\n    .then((response) => {\r\n      console.log(response)\r\n      return response.json()\r\n    })\r\n    .then((flaskvalue) => {\r\n      console.log(flaskvalue)\r\n      if (flaskvalue === \"nocon\"){\r\n        console.log(flaskvalue)\r\n        alert(\"Command could not be transmitted. Please connect the machine via Serial Port.\")\r\n      }\r\n      if (flaskvalue !== \"nocon\"){\r\n      console.log(flaskvalue)\r\n      this.setState({\r\n        printheadpos: flaskvalue\r\n      })}\r\n    })\r\n  }\r\n\r\n  movenozzleZplus = () => {\r\n\r\n    const stepsize = {\r\n      \"stepsize\": this.state.stepsize,\r\n    }\r\n    const headers = {\r\n      \"Accept\": \"application/json\",\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n\r\n    const init = {\r\n      method: \"post\",\r\n      headers: headers,\r\n      mode: \"cors\",\r\n      body: JSON.stringify(stepsize)\r\n        \r\n    }\r\n\r\n    fetch(\"http://localhost:5000/z+\", init)\r\n    .then((response) => {\r\n      console.log(response)\r\n      return response.json()\r\n    })\r\n    .then((flaskvalue) => {\r\n      console.log(flaskvalue)\r\n      if (flaskvalue === \"nocon\"){\r\n        console.log(flaskvalue)\r\n        alert(\"Command could not be transmitted. Please connect the machine via Serial Port.\")\r\n      }\r\n      if (flaskvalue !== \"nocon\"){\r\n      console.log(flaskvalue)\r\n      this.setState({\r\n        printheadpos: flaskvalue\r\n      })}\r\n    })\r\n  }\r\n\r\n  movenozzleZminus = () => {\r\n\r\n    const stepsize = {\r\n      \"stepsize\": this.state.stepsize,\r\n    }\r\n    const headers = {\r\n      \"Accept\": \"application/json\",\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n\r\n    const init = {\r\n      method: \"post\",\r\n      headers: headers,\r\n      mode: \"cors\",\r\n      body: JSON.stringify(stepsize)\r\n        \r\n    }\r\n\r\n    fetch(\"http://localhost:5000/z-\", init)\r\n    .then((response) => {\r\n      console.log(response)\r\n      return response.json()\r\n    })\r\n    .then((flaskvalue) => {\r\n      console.log(flaskvalue)\r\n      if (flaskvalue === \"nocon\"){\r\n        console.log(flaskvalue)\r\n        alert(\"Command could not be transmitted. Please connect the machine via Serial Port.\")\r\n      }\r\n      if (flaskvalue !== \"nocon\"){\r\n      console.log(flaskvalue)\r\n      this.setState({\r\n        printheadpos: flaskvalue\r\n      })}\r\n    })\r\n  }\r\n  repairPos = () => {\r\n    const headers = {\r\n      \"Accept\": \"application/json\",\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n\r\n    const init = {\r\n      method: \"post\",\r\n      headers: headers,\r\n      mode: \"cors\"\r\n        \r\n    }\r\n\r\n    fetch(\"http://localhost:5000/repairPos\", init)\r\n    .then((response) => {\r\n      console.log(response)\r\n      return response.json()\r\n    })\r\n    .then((flaskvalue) => {\r\n      console.log(flaskvalue)\r\n      if (flaskvalue === \"nocon\"){\r\n        console.log(flaskvalue)\r\n        alert(\"Command could not be transmitted. Please connect the machine via Serial Port.\")\r\n      }\r\n      if (flaskvalue !== \"nocon\"){\r\n      console.log(flaskvalue)\r\n      this.setState({\r\n        printheadpos: flaskvalue\r\n      })}\r\n    })\r\n  }\r\n\r\n  returnHome = () => {\r\n    const headers = {\r\n      \"Accept\": \"application/json\",\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n\r\n    const init = {\r\n      method: \"post\",\r\n      headers: headers,\r\n      mode: \"cors\"\r\n        \r\n    }\r\n\r\n    fetch(\"http://localhost:5000/returnHome\", init)\r\n    .then((response) => {\r\n      console.log(response)\r\n      return response.json()\r\n    })\r\n    .then((flaskvalue) => {\r\n      console.log(flaskvalue)\r\n      if (flaskvalue === \"nocon\"){\r\n        console.log(flaskvalue)\r\n        alert(\"Command could not be transmitted. Please connect the machine via Serial Port.\")\r\n      }\r\n      if (flaskvalue !== \"nocon\"){\r\n      console.log(flaskvalue)\r\n      this.setState({\r\n        printheadpos: flaskvalue\r\n      })}\r\n    })\r\n  }\r\n\r\n  sendSpeed = () => {\r\n    const speed = {\r\n      \"speed\": this.state.setspeed\r\n    }\r\n\r\n    const headers = {\r\n      \"Accept\": \"application/json\",\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n\r\n    const init = {\r\n      method: \"post\",\r\n      headers: headers,\r\n      mode: \"cors\",\r\n      body: JSON.stringify(speed)   \r\n    }\r\n\r\n    fetch(\"http://localhost:5000/setSpeed\", init) \r\n    \r\n  }\r\n\r\n  manualCoords = () => {\r\n    const coords = {\r\n      \"x\": this.state.fieldx,\r\n      \"y\": this.state.fieldy,\r\n      \"z\": this.state.fieldz\r\n    }\r\n    const headers = {\r\n      \"Accept\": \"application/json\",\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n\r\n    const init = {\r\n      method: \"post\",\r\n      headers: headers,\r\n      mode: \"cors\",\r\n      body: JSON.stringify(coords)   \r\n    }\r\n\r\n    fetch(\"http://localhost:5000/manualCoords\", init)\r\n    .then((response) => {\r\n      console.log(response)\r\n      return response.json()\r\n    })\r\n    .then((flaskvalue) => {\r\n      console.log(flaskvalue)\r\n      if (flaskvalue === \"nocon\"){\r\n        console.log(flaskvalue)\r\n        alert(\"Command could not be transmitted. Please connect the machine via Serial Port.\")\r\n      }\r\n      if (flaskvalue !== \"nocon\"){\r\n      console.log(flaskvalue)\r\n      this.setState({\r\n        printheadpos: flaskvalue\r\n      })}\r\n    })\r\n\r\n  }\r\n  sendInvcommand = () => {\r\n    const msg = {\r\n      \"msg\": this.state.invcommand\r\n    }\r\n    const headers = {\r\n      \"Accept\": \"application/json\",\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n    const init = {\r\n      method: \"post\",\r\n      headers: headers,\r\n      mode: \"cors\",\r\n      body: JSON.stringify(msg)   \r\n    }\r\n    fetch(\"http://localhost:5000/sendInvcommand\", init)\r\n    .then((response) => {\r\n      console.log(response)\r\n      return response.json()\r\n    })\r\n    .then((flaskvalue) => {\r\n      console.log(flaskvalue)\r\n      if (flaskvalue === \"nocon\"){\r\n        console.log(flaskvalue)\r\n        alert(\"Command could not be transmitted. Please connect the machine via Serial Port.\")\r\n      }\r\n      else {\r\n        console.log(flaskvalue)\r\n        this.setState({\r\n          printheadpos: flaskvalue\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  startTranslate = () => {\r\n    const headers = {\r\n      \"Accept\": \"application/json\",\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n    const init = {\r\n      method: \"post\",\r\n      headers: headers,\r\n      mode: \"cors\",   \r\n    }\r\n\r\n    fetch(\"http://localhost:5000/startTranslate\", init)\r\n    .then((response) => {\r\n      console.log(response)\r\n      return response.json()\r\n\r\n    })\r\n    .then((status) => {\r\n      console.log(status)\r\n      console.log(typeof(status))\r\n      if (status === \"done\"){\r\n        this.setState({\r\n          translated: true,\r\n          gcodebuttons: false,\r\n          verifiedno: false,\r\n          verified: true\r\n        }, function() {this.startbuildCheck()})\r\n      }\r\n      if (status === \"error\"){\r\n        alert(\"G-Code could not be translated\")\r\n      }\r\n      if (status === \"type_error\"){\r\n        alert(\"Please enter Set Up Values before translating the G-Code / Make sure, that coordinates are type float.\")\r\n      }\r\n      if (status !== \"done\" && status !==\"error\" && status!==\"type_error\"){\r\n        this.setState({\r\n          verifiedno: true,\r\n          translated: false\r\n        })\r\n        alert(`${status}`)\r\n        \r\n      }\r\n\r\n    })\r\n    .catch(function(error){\r\n      console.log(error)\r\n      alert(\"Connection to the server could not be established.\")\r\n    })\r\n  }\r\n\r\n  openGcode = () => {\r\n    const headers = {\r\n      \"Accept\": \"application/json\",\r\n      \"Content-Type\": \"application\"\r\n    }\r\n    const init = {\r\n      method: \"post\",\r\n      headers: headers,\r\n      mode: \"cors\",\r\n    }\r\n\r\n    fetch(\"http://localhost:5000/openGcode\", init)\r\n  }\r\n\r\n  verifyGcode = () => {\r\n    const headers = {\r\n      \"Accept\": \"application/json\",\r\n      \"Content-Type\": \"application\"\r\n    }\r\n\r\n    const init = {\r\n      method: \"post\",\r\n      headers: headers,\r\n      mode: \"cors\"\r\n    }\r\n\r\n    fetch(\"http://localhost:5000/verifyGcode\", init)\r\n    .then((response) => {\r\n      console.log(response)\r\n      return response.json()\r\n    })\r\n    .then((status) => {\r\n      if (status === \"done\"){\r\n        this.setState({\r\n          verifiedyes: true,\r\n          verifiedno: false,\r\n        })}\r\n      if (status === \"error\"){\r\n        this.setState({\r\n          verifiedno: true,\r\n          verifiedyes: false,\r\n        })\r\n      }\r\n\r\n    })\r\n  }\r\n  setPosmanualsubstrate = () => {\r\n    const headers = {\r\n      \"Accept\": \"application/json\",\r\n      \"Content-Type\": \"application\"\r\n    }\r\n    const init = {\r\n      method: \"post\",\r\n      headers: headers,\r\n      mode: \"cors\"\r\n    }\r\n    fetch(\"http://localhost:5000/setPosmanual\", init)\r\n    .then((response) => {\r\n      console.log(response)\r\n      return response.json()\r\n    })\r\n    .then((status) => {\r\n      this.setState({\r\n          substrateposx: status.xpos,\r\n          substrateposy: status.ypos\r\n      })\r\n    })\r\n  }\r\n\r\n  setPosmanualrppos = () => {\r\n    const headers = {\r\n      \"Accept\": \"application/json\",\r\n      \"Content-Type\": \"application\"\r\n    }\r\n    const init = {\r\n      method: \"post\",\r\n      headers: headers,\r\n      mode: \"cors\"\r\n    }\r\n\r\n    fetch(\"http://localhost:5000/setPosmanual\", init)\r\n    .then((response) => {\r\n      return response.json()\r\n    })\r\n    .then((status) => {\r\n      this.setState({\r\n        rpposx: status.xpos,\r\n        rpposy: status.ypos\r\n      })\r\n    })\r\n  }\r\n  \r\n/*The name of the chosen file to upload is saved in a state and send to the backend*/\r\n  fileSelectionNameOnChange = (e, a) => {\r\n    console.log(a)\r\n\r\n    this.setState({\r\n        uploadfilenameApp: a,\r\n        uploadbutton: false,\r\n        translated: false,\r\n        verifiedno: false\r\n\r\n    })\r\n    console.log(this.state.uploadfilenameApp)\r\n    const name = {\r\n        \"filename\": a\r\n    }\r\n\r\n    const headers = {\r\n        'Accept': 'application/json',\r\n          'Content-Type': 'application/json'\r\n      };\r\n\r\n    const init = {\r\n        method: 'post',\r\n        headers: headers,\r\n        mode: 'cors',\r\n        body: JSON.stringify(name)\r\n        };\r\n\r\n    fetch('http://localhost:5000/getFilename', init)\r\n    .then((response)=> {\r\n        console.log(response)\r\n        if (!response.ok){\r\n            alert(\"Something went wrong, please try to choose the file again.\")\r\n        }\r\n        if (response){\r\n            console.log(\"Filename has been transmitted to backend.\")\r\n        }\r\n        return response.json()\r\n    }).then((filename) => {\r\n        if (filename === \"File Name\"){\r\n            alert(\"Something went wrong, please try to choose the file again.\")\r\n        }\r\n\r\n    })\r\n\r\n  }\r\n\r\n  fileUpload = (e, a) => {\r\n\r\n    \r\n    e.preventDefault();\r\n    const data = new FormData();\r\n    data.append('file', a);\r\n    //data.append('filename', this.fileName.value);\r\n    fetch('http://localhost:5000/fileupload', {\r\n      method: \"POST\",\r\n      body: data,\r\n    })\r\n    .then((response) => {\r\n        console.log(response)\r\n        if (response.ok === false){\r\n            alert(\"Please choose a file before trying to upload.\")\r\n        }\r\n        if (response.ok === true){\r\n            this.setState({\r\n                uploadbutton: true  \r\n            }, function() {this.startbuildCheck()})\r\n        \r\n        }\r\n    }).catch(function(error){\r\n        console.log(error)\r\n        alert(\"Please start the Server before trying to upload.\")\r\n\r\n    })\r\n  }\r\n\r\n  startPrinting = () => {\r\n    loop1 = setInterval(this.printProgress, 2000)\r\n    const headers = {\r\n      'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n    };\r\n\r\n    const init = {\r\n      method: 'post',\r\n      headers: headers,\r\n      mode: 'cors',\r\n      };\r\n\r\n    \r\n    fetch('http://localhost:5000/startPrinting', init)\r\n    .then((response) => {\r\n      console.log(response)\r\n      return response.json()\r\n    })\r\n    .then((msg) => {\r\n      if (msg === \"done\"){\r\n        console.log(\"thread was started\")\r\n      }\r\n    })\r\n  }\r\n\r\n  printProgress = () => {\r\n    \r\n    \r\n    const headers = {\r\n      'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n    };\r\n    const init = {\r\n      method: 'post',\r\n      headers: headers,\r\n      mode: 'cors',\r\n      };\r\n\r\n      fetch('http://localhost:5000/printProgress', init)\r\n      .then((response) => {\r\n        console.log(response)\r\n        return response.json()\r\n      })\r\n      .then((msg) => {\r\n        if (msg.percent >= 100){\r\n          this.setState({\r\n            progress: 100\r\n          })\r\n          clearInterval(loop1)\r\n          console.log(\"loop cleared\")\r\n        }\r\n        this.setState({\r\n          progress:msg.percent,\r\n          linecontentcheck: msg.linecontent,\r\n          wirecheck1: msg.wirefeed\r\n        })\r\n        console.log(this.state.linecontentcheck)\r\n        console.log(this.state.linecontentcheck2)\r\n        if (this.state.linecontentcheck !== this.state.linecontentcheck2){\r\n          linecount += 1\r\n          var d = new Date();\r\n          this.setState({\r\n            \r\n            linecontentcheck2: msg.linecontent,\r\n            linecontent: this.state.linecontent.concat(`${linecount}. ${msg.linecontent}, ${d.getHours()}h:${d.getMinutes()}min:${d.getSeconds()}s\\n`)\r\n        })\r\n        }\r\n        if (this.state.wirecheck1 !== this.state.wirecheck2){\r\n          this.setState({\r\n            wirecheck2: msg.wirefeed,\r\n            linecontent: this.state.linecontent.concat(`Wirefeed Speed: ${msg.wirefeed} mm/s\\n`)\r\n          })\r\n        }\r\n        console.log(this.state.progressloop)\r\n        console.log(this.state.linecontent)\r\n      })\r\n  }\r\n  \r\n    \r\n\r\n  stopPrint = () => {\r\n    const headers = {\r\n      'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n    };\r\n    const init = {\r\n      method: 'post',\r\n      headers: headers,\r\n      mode: 'cors',\r\n      };\r\n    fetch('http://localhost:5000/stopPrint', init)\r\n    .then((response) => {\r\n      console.log(response)\r\n      return response.json()\r\n    })\r\n    .then((msg) => {\r\n      if (msg === \"done\"){\r\n        alert(\"Print Process was stopped.\")\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  readifyPrint = () => {\r\n    const headers = {\r\n      'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n    };\r\n\r\n    const init = {\r\n      method: 'post',\r\n      headers: headers,\r\n      mode: 'cors',\r\n      };\r\n    fetch('http://localhost:5000/readifyPrint', init)\r\n    .then((response) => {\r\n      console.log(response)\r\n      return response.json()\r\n    })\r\n    .then((msg) => {\r\n      if (msg === \"done\"){\r\n        this.setState({\r\n          startbutton: false\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  resetAll = () => {\r\n    const headers = {\r\n      'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n    }\r\n    const init = {\r\n      method: 'post',\r\n      headers: headers,\r\n      mode: 'cors',\r\n      };\r\n    fetch('http://localhost:5000/resetAll',init)\r\n    .then((response) => {\r\n      if (response.ok){\r\n        alert(\"Please refresh the page and return to Set Up Menu.\")\r\n        this.setState({\r\n          setup2activate: true\r\n        })\r\n      }\r\n      else {\r\n        alert(\"Settings could not be reseted. Please restart the machine.\")\r\n      }\r\n\r\n    })\r\n  }\r\n\r\n}\r\nexport default App;\r\n  \r\n  \r\n\r\n\r\n  \r\n\r\n\r\n      \r\n        \r\n    \r\n    \r\n        \r\n        \r\n        \r\n          \r\n        \r\n\r\n\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/untitled.0a7f1768.svg\";"],"sourceRoot":""}